// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios16.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BlueIDAccessSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import BackgroundTasks
import Combine
import CoreBluetooth
import CoreData
import CoreLocation
import CoreNFC
import CryptoKit
import Dispatch
import Foundation
import Network
import NordicDFU
import Security
import Swift
import SwiftProtobuf
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessClaimIdentityCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(activationToken: Swift.String) async throws -> BlueIDAccessSDK.BlueIdentity
  #endif
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessGetObjectsCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String) async throws -> BlueIDAccessSDK.BlueAccessObjectList
  #endif
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BlueAsyncTerminalCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, deviceID: Swift.String) async throws
  #endif
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BlueClearBlacklistCommand : BlueIDAccessSDK.BlueAsyncTerminalCommand {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BlueClearEventLogCommand : BlueIDAccessSDK.BlueAsyncTerminalCommand {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BlueClearSystemLogCommand : BlueIDAccessSDK.BlueAsyncTerminalCommand {
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueGetSystemStatusCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, deviceID: Swift.String) async throws -> BlueIDAccessSDK.BlueSystemStatusExt
  #endif
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAcccessAddIdentityCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identity: BlueIDAccessSDK.BlueIdentity) async throws
  #endif
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessListDevicesCommand : BlueIDAccessSDK.BlueSdkCommand {
  public func run(identityID: Swift.String, suppressCredentialValidityStart: Swift.Bool? = false) throws -> BlueIDAccessSDK.BlueAccessDeviceList
  @objc deinit
}
final public class BlueError : Swift.Error, Foundation.LocalizedError, Swift.Equatable {
  public static var timeoutMessage: Swift.String
  public static var returnCodeMessage: Swift.String
  public static var unknownErrorMessage: Swift.String
  final public let returnCode: BlueIDAccessSDK.BlueReturnCode
  final public var errorDescription: Swift.String? {
    get
  }
  final public var failureReason: Swift.String? {
    get
  }
  final public var recoverySuggestion: Swift.String? {
    get
  }
  final public var helpAnchor: Swift.String? {
    get
  }
  public init(_ returnCode: BlueIDAccessSDK.BlueReturnCode, cause: (any Swift.Error)? = nil, detail: Swift.String? = nil)
  public static func == (lhs: BlueIDAccessSDK.BlueError, rhs: BlueIDAccessSDK.BlueError) -> Swift.Bool
  @objc deinit
}
final public class BlueTerminalError : Swift.Error, Foundation.LocalizedError, Swift.Equatable {
  final public let terminalError: BlueIDAccessSDK.BlueError
  final public var errorDescription: Swift.String? {
    get
  }
  final public var failureReason: Swift.String? {
    get
  }
  final public var recoverySuggestion: Swift.String? {
    get
  }
  final public var helpAnchor: Swift.String? {
    get
  }
  public init(_ returnCode: BlueIDAccessSDK.BlueReturnCode)
  public static func == (lhs: BlueIDAccessSDK.BlueTerminalError, rhs: BlueIDAccessSDK.BlueTerminalError) -> Swift.Bool
  @objc deinit
}
public enum BlueEventType : Swift.String, Swift.CaseIterable {
  case deviceAdded
  case deviceUpdated
  case deviceRemoved
  case deviceNearByDetected
  case deviceNearByLost
  case deviceNearByUpdated
  case terminalResult
  case accessCredentialAdded
  case accessDeviceClaimed
  case tokenSyncStarted
  case tokenSyncFinished
  case bluetoothStateChanged
  case peripheralDiscovered
  public init?(rawValue: Swift.String)
  public typealias AllCases = [BlueIDAccessSDK.BlueEventType]
  public typealias RawValue = Swift.String
  public static var allCases: [BlueIDAccessSDK.BlueEventType] {
    get
  }
  public var rawValue: Swift.String {
    get
  }
}
public protocol BlueEventListener : AnyObject {
  func blueEvent(event: BlueIDAccessSDK.BlueEventType, data: Any?)
}
public func blueAddEventListener(event: BlueIDAccessSDK.BlueEventType? = nil, listener: any BlueIDAccessSDK.BlueEventListener)
public func blueRemoveEventListener(listener: any BlueIDAccessSDK.BlueEventListener)
public enum BlueLockState : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case unknownLockState
  case locked
  case unlocked
  case jammed
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueLockState]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueLockState] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public struct BlueLockConfig : Swift.Sendable {
  public var openSchedules: [BlueIDAccessSDK.BlueLocalTimeSchedule]
  public var openScheduleByUser: Swift.Bool {
    get
    set
  }
  public var hasOpenScheduleByUser: Swift.Bool {
    get
  }
  public mutating func clearOpenScheduleByUser()
  public var keepClosedOnHolidays: Swift.Bool {
    get
    set
  }
  public var hasKeepClosedOnHolidays: Swift.Bool {
    get
  }
  public mutating func clearKeepClosedOnHolidays()
  public var defaultOpenTimeSec: Swift.UInt32 {
    get
    set
  }
  public var hasDefaultOpenTimeSec: Swift.Bool {
    get
  }
  public mutating func clearDefaultOpenTimeSec()
  public var extendedOpenTimeSec: Swift.UInt32 {
    get
    set
  }
  public var hasExtendedOpenTimeSec: Swift.Bool {
    get
  }
  public mutating func clearExtendedOpenTimeSec()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueLockStatus : Swift.Sendable {
  public var state: BlueIDAccessSDK.BlueLockState {
    get
    set
  }
  public var hasState: Swift.Bool {
    get
  }
  public mutating func clearState()
  public var openings: Swift.UInt32 {
    get
    set
  }
  public var hasOpenings: Swift.Bool {
    get
  }
  public mutating func clearOpenings()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
extension BlueIDAccessSDK.BlueLockState : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueLockConfig : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueLockConfig, rhs: BlueIDAccessSDK.BlueLockConfig) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueLockStatus : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueLockStatus, rhs: BlueIDAccessSDK.BlueLockStatus) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
public protocol BlueTaskRunner {
  func getTasks() -> [BlueIDAccessSDK.BlueTask]
  #if compiler(>=5.3) && $AsyncAwait
  func execute(_ throwWhenFail: Swift.Bool) async throws
  #endif
  func cancel() -> Swift.Bool
  func isFailed() -> Swift.Bool
  func isCancelled() -> Swift.Bool
  func isSuccessful() -> Swift.Bool
  func getResult<ResultType>(_ id: Swift.AnyHashable) throws -> ResultType
}
@_hasMissingDesignatedInitializers public class BlueTask {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BlueSerialTaskRunner : BlueIDAccessSDK.BlueTaskRunner {
  public func getTasks() -> [BlueIDAccessSDK.BlueTask]
  #if compiler(>=5.3) && $AsyncAwait
  public func execute(_ throwWhenFail: Swift.Bool) async throws
  #endif
  public func cancel() -> Swift.Bool
  public func isSuccessful() -> Swift.Bool
  public func isFailed() -> Swift.Bool
  public func isCancelled() -> Swift.Bool
  public func getResult<ResultType>(_ id: Swift.AnyHashable) throws -> ResultType
  @objc deinit
}
public struct BlueInitializeCommand {
  public func run() throws
}
public struct BlueReleaseCommand {
  public func run() throws
}
public struct BlueVersionInfoCommand {
  public func run() throws -> BlueIDAccessSDK.BlueVersionInfo
}
public struct BlueTestCommand {
  public func run(_ hardwareName: Swift.String, _ hardwareVersion: Swift.Int, _ data: BlueIDAccessSDK._BlueTestEncodeDecode) throws -> BlueIDAccessSDK._BlueTestEncodeDecode
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueCreateLegacyProvisioningCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, provisioning: BlueIDAccessSDK.BlueLegacyProvisioningRequest) async throws -> BlueIDAccessSDK.BlueLegacyProvisioningResponse
  #endif
  @objc deinit
}
public struct BlueOssSoCreateMobileCommand {
  public func run(_ provisioningData: BlueIDAccessSDK.BlueOssSoProvisioningData, _ configuration: BlueIDAccessSDK.BlueOssSoConfiguration) throws -> BlueIDAccessSDK.BlueOssSoMobile
}
public struct BlueOssSoFormatCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSoSettings?, _ factoryReset: Swift.Bool = false) throws
}
public struct BlueOssSoGetStorageProfileCommand {
  public func run(_ transponderType: BlueIDAccessSDK.BlueTransponderType, _ provisioningConfig: BlueIDAccessSDK.BlueOssSoProvisioningConfiguration?) throws -> BlueIDAccessSDK.BlueOssSoStorageProfile
}
public struct BlueOssSoCreateStandardProvisioningDataCommand {
  public func run(_ credentialId: Swift.String, _ siteId: Swift.Int, _ configuration: BlueIDAccessSDK.BlueOssSoProvisioningConfiguration? = nil) throws -> BlueIDAccessSDK.BlueOssSoProvisioningData
}
public struct BlueOssSoCreateInterventionProvisioningDataCommand {
  public func run(_ credentialId: Swift.String, _ siteId: Swift.Int, _ configuration: BlueIDAccessSDK.BlueOssSoProvisioningConfiguration? = nil) throws -> BlueIDAccessSDK.BlueOssSoProvisioningData
}
public struct BlueOssSoIsProvisionedCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSoSettings?) throws -> Swift.Bool
}
public struct BlueOssSoProvisionCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSoSettings?, _ provisioningData: BlueIDAccessSDK.BlueOssSoProvisioningData) throws
}
public struct BlueOssSoUnprovisionCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSoSettings?) throws
}
public struct BlueOssSoReadConfigurationCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSoSettings?, errorHandler: ((any Swift.Error) -> Swift.String?)? = nil) throws -> BlueIDAccessSDK.BlueOssSoConfiguration
}
public struct BlueOssSoUpdateConfigurationCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSoSettings?, _ newConfiguration: BlueIDAccessSDK.BlueOssSoConfiguration?, _ clearEvents: Swift.Bool) throws
}
public struct BlueFormatOssSoCredentialCommand {
  public func run(identityID: Swift.String) throws
}
public struct BlueReadOssSoCredentialCommand {
  public func run(identityID: Swift.String) throws -> BlueIDAccessSDK.BlueOssSoConfiguration
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueWriteOssSoCredentialCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, offlineID: Swift.String) async throws -> Swift.Bool
  #endif
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueRefreshOssSoCredentialCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String) async throws -> BlueIDAccessSDK.BlueOssSoConfiguration
  #endif
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BlueGetTransponderIdCommand {
  public func run() throws -> Swift.String?
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueRefreshOssSoCredentialsCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync() async throws -> BlueIDAccessSDK.BlueRefreshOssSoIdentities
  #endif
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BlueTryAccessDeviceCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, deviceID: Swift.String) async throws -> BlueIDAccessSDK.BlueOssAccessResult
  #endif
  @objc deinit
}
public struct BlueOpenAppSettingsCommand {
  public func run(completionHandler: @escaping (Swift.Bool) -> Swift.Void)
}
public enum BlueReturnCode : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case ok
  case pending
  case error
  case invalidArguments
  case invalidState
  case notSupported
  case eof
  case overflow
  case storageFull
  case invalidCrc
  case invalidMemoryAddress
  case versionMissmatch
  case invalidSignature
  case invalidValidity
  case cryptLibraryFailed
  case notFound
  case alreadyExists
  case timeout
  case disconnected
  case pointerConversionFailed
  case unavailable
  case aborted
  case test
  case encodeDataWriteFailed
  case encodeDataWriteNothingWritten
  case decodeDataReadFailed
  case bleInvalidCompanyIdentifier
  case invalidSystemConfig
  case invalidProvisioning
  case invalidTransponder
  case bleServiceNotFound
  case bleCharacteristicNotFound
  case bleFailSetCharacteristicNotify
  case nfcTransponderNoResult
  case nfcTransponderCommandError
  case nfcTransponderStorageFull
  case nfcTransponderAuthenticateFailed
  case spinvalidSalt
  case spfailedHashing
  case spfailedSigning
  case spfailedGetOwnSalt
  case spfailedSetPeerSalt
  case spfailedEncrypt
  case spfailedDecrypt
  case spfailedGetCurrentTime
  case spfailedSignature
  case sperrorStatusCode
  case ossInvalidCredentialID
  case ossMaFailedMcpLib
  case ossSoIncompatibleMajorVersion
  case ossSoInvalidCredentialType
  case ossSoInvalidTimestamp
  case ossSoInvalidTimeperiod
  case ossSoInvalidSiteID
  case ossSoInvalidDoorAccessBy
  case ossSoInvalidDoorDtscheduleNumber
  case ossSoTimePeriodsCountMissmatch
  case ossSoInvalidDtscheduleNumber
  case ossSoEventIDNotSupportedForWrite
  case ossSoExtensionFileSizeTooLarge
  case ossSoExtensionFileSizeInvalid
  case ossSoExtensionTooManyFeatures
  case ossSoExtensionValueTooLarge
  case ossSoInvalidExtensionLength
  case ossSoInvalidExtensionTag
  case ossSoMaxEventEntriesExceeded
  case ossSoMaxBlacklistEntriesExceeded
  case ossSidIncompatibleMajorVersion
  case ossSidInvalidCredentialType
  case mifareDesfireWrongKeyType
  case mifareDesfireWrongKey
  case mifareDesfireCmacNotReceived
  case mifareDesfireCmacNotVerified
  case mifareDesfireNoneOrInvalidAid
  case sdkCredentialNotFound
  case sdkCredentialPrivateKeyNotFound
  case sdkUnsupportedPlatform
  case sdkDeviceNotFound
  case sdkSpTokenNotFound
  case sdkOssEntryNotFound
  case sdkOssSoSettingsNotFound
  case sdkGetSystemConfigFailed
  case sdkEventLogsPushFailed
  case sdkSystemLogEntriesPushFailed
  case sdkBlacklistEntriesDeployFailed
  case sdkDeviceSystemStatusPushFailed
  case sdkNetworkError
  case sdkDecodeBase64Failed
  case sdkDecodeJsonFailed
  case sdkFetchDataFailed
  case sdkTimeout
  case sdkGetAuthenticationTokenFailed
  case sdkUpdateDeviceFailed
  case sdkGetBlacklistEntriesFailed
  case sdkGetSystemStatusFailed
  case sdkWaitDeviceToRestartFailed
  case sdkUnzipError
  case sdkInvalidFirmwareURL
  case sdkDeviceFactoryStateRequired
  case ossMareturnCodeStart
  case ossMareturnCodeEnd
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueReturnCode]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueReturnCode] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueTimeUnit : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case seconds
  case minutes
  case hours
  case days
  case months
  case years
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueTimeUnit]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueTimeUnit] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueWeekday : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case monday
  case tuesday
  case wednesday
  case thursday
  case friday
  case saturday
  case sunday
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueWeekday]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueWeekday] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueCredentialType : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case regular
  case maintenance
  case master
  case nfcWriter
  case emergency
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueCredentialType]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueCredentialType] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueAccessType : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case defaultTime
  case extendedTime
  case customTime
  case toggle
  case close
  case noAccess
  case noAccessValidity
  case noAccessBlacklisted
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueAccessType]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueAccessType] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueTransponderType : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case unknownTransponder
  case mobileTransponder
  case mifareDesfire
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueTransponderType]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueTransponderType] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueHardwareType : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case unknownHardware
  case testHardware
  case gateway
  case cylinderLock
  case doorHandleLock
  case wallReader
  case kiosk
  case cylinderLockCompact
  case furnitureLock
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueHardwareType]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueHardwareType] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueBatteryLevel : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case unknownBattery
  case onPower
  case goodPower
  case lowPower
  case criticalPower
  case almostEmpty
  case fullyDischarged
  case fullyCharged
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueBatteryLevel]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueBatteryLevel] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueEventId : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case batteryLow
  case batteryReplaced
  case lockJammed
  case systemEvent
  case internalError
  case failedToUnlock
  case tamperingDetected
  case blacklistedCredentialDetected
  case blacklistFull
  case accessGranted
  case accessDenied
  case crcerror
  case maxOssSoEventID
  case terminalCommand
  case terminalOss
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueEventId]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueEventId] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueEventInfoSystem : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case systemRestart
  case systemConfigured
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueEventInfoSystem]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueEventInfoSystem] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueEventInfoAccess : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case granted
  case grantedDefaultTime
  case grantedExtendedTime
  case grantedToggleUnlock
  case grantedToggleLock
  case denied
  case deniedBlacklisted
  case deniedValidity
  case deniedDtschedule
  case deniedInternalError
  case deniedTransponderError
  case deniedInvalidTransponderData
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueEventInfoAccess]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueEventInfoAccess] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueOssCredentialTypeSource : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case oss
  case proprietary
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueOssCredentialTypeSource]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueOssCredentialTypeSource] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueOssSoCredentialTypeOssCredential : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case standard
  case interventionMedia
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueOssSoCredentialTypeOssCredential]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueOssSoCredentialTypeOssCredential] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueOssSoDoorGroupId : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case masterGroupID
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueOssSoDoorGroupId]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueOssSoDoorGroupId] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueOssSoDoorInfoAccessBy : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case doorGroupID
  case doorID
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueOssSoDoorInfoAccessBy]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueOssSoDoorInfoAccessBy] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueOssSoFileId : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case info
  case data
  case event
  case blacklist
  case customerExtensions
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueOssSoFileId]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueOssSoFileId] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueOssSoWriteStatus : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case writableByAnyOrg
  case writableBySpecificOrg
  case notWritable
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueOssSoWriteStatus]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueOssSoWriteStatus] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public struct BlueSharedDemoData : @unchecked Swift.Sendable {
  public var deviceID: Swift.String {
    get
    set
  }
  public var hasDeviceID: Swift.Bool {
    get
  }
  public mutating func clearDeviceID()
  public var terminalPrivateKey: Foundation.Data {
    get
    set
  }
  public var hasTerminalPrivateKey: Swift.Bool {
    get
  }
  public mutating func clearTerminalPrivateKey()
  public var terminalPublicKey: Foundation.Data {
    get
    set
  }
  public var hasTerminalPublicKey: Swift.Bool {
    get
  }
  public mutating func clearTerminalPublicKey()
  public var signaturePrivateKey: Foundation.Data {
    get
    set
  }
  public var hasSignaturePrivateKey: Swift.Bool {
    get
  }
  public mutating func clearSignaturePrivateKey()
  public var signaturePublicKey: Foundation.Data {
    get
    set
  }
  public var hasSignaturePublicKey: Swift.Bool {
    get
  }
  public mutating func clearSignaturePublicKey()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueVersionInfo : Swift.Sendable {
  public var buildTime: Swift.UInt32 {
    get
    set
  }
  public var hasBuildTime: Swift.Bool {
    get
  }
  public mutating func clearBuildTime()
  public var version: Swift.UInt32 {
    get
    set
  }
  public var hasVersion: Swift.Bool {
    get
  }
  public mutating func clearVersion()
  public var testVersion: Swift.UInt32 {
    get
    set
  }
  public var hasTestVersion: Swift.Bool {
    get
  }
  public mutating func clearTestVersion()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueLocalTimestamp : Swift.Sendable {
  public var year: Swift.UInt32 {
    get
    set
  }
  public var hasYear: Swift.Bool {
    get
  }
  public mutating func clearYear()
  public var month: Swift.UInt32 {
    get
    set
  }
  public var hasMonth: Swift.Bool {
    get
  }
  public mutating func clearMonth()
  public var date: Swift.UInt32 {
    get
    set
  }
  public var hasDate: Swift.Bool {
    get
  }
  public mutating func clearDate()
  public var hours: Swift.UInt32 {
    get
    set
  }
  public var hasHours: Swift.Bool {
    get
  }
  public mutating func clearHours()
  public var minutes: Swift.UInt32 {
    get
    set
  }
  public var hasMinutes: Swift.Bool {
    get
  }
  public mutating func clearMinutes()
  public var seconds: Swift.UInt32 {
    get
    set
  }
  public var hasSeconds: Swift.Bool {
    get
  }
  public mutating func clearSeconds()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueLocalTimeperiod : Swift.Sendable {
  public var hoursFrom: Swift.UInt32 {
    get
    set
  }
  public var hasHoursFrom: Swift.Bool {
    get
  }
  public mutating func clearHoursFrom()
  public var minutesFrom: Swift.UInt32 {
    get
    set
  }
  public var hasMinutesFrom: Swift.Bool {
    get
  }
  public mutating func clearMinutesFrom()
  public var hoursTo: Swift.UInt32 {
    get
    set
  }
  public var hasHoursTo: Swift.Bool {
    get
  }
  public mutating func clearHoursTo()
  public var minutesTo: Swift.UInt32 {
    get
    set
  }
  public var hasMinutesTo: Swift.Bool {
    get
  }
  public mutating func clearMinutesTo()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueLocalTimeSchedule : Swift.Sendable {
  public var dayOfYearStart: Swift.UInt32 {
    get
    set
  }
  public var hasDayOfYearStart: Swift.Bool {
    get
  }
  public mutating func clearDayOfYearStart()
  public var dayOfYearEnd: Swift.UInt32 {
    get
    set
  }
  public var hasDayOfYearEnd: Swift.Bool {
    get
  }
  public mutating func clearDayOfYearEnd()
  public var weekdays: [Swift.Bool]
  public var timePeriod: BlueIDAccessSDK.BlueLocalTimeperiod {
    get
    set
  }
  public var hasTimePeriod: Swift.Bool {
    get
  }
  public mutating func clearTimePeriod()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueCredentialId : Swift.Sendable {
  public var id: Swift.String {
    get
    set
  }
  public var hasID: Swift.Bool {
    get
  }
  public mutating func clearID()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueBlacklistEntry : Swift.Sendable {
  public var credentialID: BlueIDAccessSDK.BlueCredentialId {
    get
    set
  }
  public var hasCredentialID: Swift.Bool {
    get
  }
  public mutating func clearCredentialID()
  public var expiresAt: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasExpiresAt: Swift.Bool {
    get
  }
  public mutating func clearExpiresAt()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueBleManufacturerInfo : Swift.Sendable {
  public var hardwareType: BlueIDAccessSDK.BlueHardwareType {
    get
    set
  }
  public var hasHardwareType: Swift.Bool {
    get
  }
  public mutating func clearHardwareType()
  public var batteryLevel: BlueIDAccessSDK.BlueBatteryLevel {
    get
    set
  }
  public var hasBatteryLevel: Swift.Bool {
    get
  }
  public mutating func clearBatteryLevel()
  public var applicationVersion: Swift.UInt32 {
    get
    set
  }
  public var hasApplicationVersion: Swift.Bool {
    get
  }
  public mutating func clearApplicationVersion()
  public var localMidnightTimeEpoch: Swift.UInt32 {
    get
    set
  }
  public var hasLocalMidnightTimeEpoch: Swift.Bool {
    get
  }
  public mutating func clearLocalMidnightTimeEpoch()
  public var isFactory: Swift.Bool {
    get
    set
  }
  public var hasIsFactory: Swift.Bool {
    get
  }
  public mutating func clearIsFactory()
  public var hardwareState: Swift.UInt32 {
    get
    set
  }
  public var hasHardwareState: Swift.Bool {
    get
  }
  public mutating func clearHardwareState()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueBleAdvertisementInfo : Swift.Sendable {
  public var deviceID: Swift.String {
    get
    set
  }
  public var hasDeviceID: Swift.Bool {
    get
  }
  public mutating func clearDeviceID()
  public var txPower1Meter: Swift.Int32 {
    get
    set
  }
  public var hasTxPower1Meter: Swift.Bool {
    get
  }
  public mutating func clearTxPower1Meter()
  public var isIbeacon: Swift.Bool {
    get
    set
  }
  public var hasIsIbeacon: Swift.Bool {
    get
  }
  public mutating func clearIsIbeacon()
  public var mfInfo: BlueIDAccessSDK.BlueBleManufacturerInfo {
    get
    set
  }
  public var hasMfInfo: Swift.Bool {
    get
  }
  public mutating func clearMfInfo()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueEvent : Swift.Sendable {
  public var sequenceID: Swift.UInt32 {
    get
    set
  }
  public var hasSequenceID: Swift.Bool {
    get
  }
  public mutating func clearSequenceID()
  public var eventTime: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasEventTime: Swift.Bool {
    get
  }
  public mutating func clearEventTime()
  public var eventID: BlueIDAccessSDK.BlueEventId {
    get
    set
  }
  public var hasEventID: Swift.Bool {
    get
  }
  public mutating func clearEventID()
  public var eventInfo: Swift.Int32 {
    get
    set
  }
  public var hasEventInfo: Swift.Bool {
    get
  }
  public mutating func clearEventInfo()
  public var credentialID: BlueIDAccessSDK.BlueCredentialId {
    get
    set
  }
  public var hasCredentialID: Swift.Bool {
    get
  }
  public mutating func clearCredentialID()
  public var command: Swift.String {
    get
    set
  }
  public var hasCommand: Swift.Bool {
    get
  }
  public mutating func clearCommand()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSPHandshake : @unchecked Swift.Sendable {
  public var transponderSalt: Foundation.Data {
    get
    set
  }
  public var hasTransponderSalt: Swift.Bool {
    get
  }
  public mutating func clearTransponderSalt()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSPHandshakeReply : @unchecked Swift.Sendable {
  public var terminalSalt: Foundation.Data {
    get
    set
  }
  public var hasTerminalSalt: Swift.Bool {
    get
  }
  public mutating func clearTerminalSalt()
  public var terminalSignature: Foundation.Data {
    get
    set
  }
  public var hasTerminalSignature: Swift.Bool {
    get
  }
  public mutating func clearTerminalSignature()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSPTokenCommand : @unchecked Swift.Sendable {
  public var credentialID: BlueIDAccessSDK.BlueCredentialId {
    get
    set
  }
  public var hasCredentialID: Swift.Bool {
    get
  }
  public mutating func clearCredentialID()
  public var validityStart: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasValidityStart: Swift.Bool {
    get
  }
  public mutating func clearValidityStart()
  public var validityEnd: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasValidityEnd: Swift.Bool {
    get
  }
  public mutating func clearValidityEnd()
  public var command: Swift.String {
    get
    set
  }
  public var hasCommand: Swift.Bool {
    get
  }
  public mutating func clearCommand()
  public var data: Foundation.Data {
    get
    set
  }
  public var hasData: Swift.Bool {
    get
  }
  public mutating func clearData()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSPToken : @unchecked Swift.Sendable {
  public var signature: Foundation.Data {
    get
    set
  }
  public var hasSignature: Swift.Bool {
    get
  }
  public mutating func clearSignature()
  public var payload: BlueIDAccessSDK.BlueSPToken.OneOf_Payload?
  public var command: BlueIDAccessSDK.BlueSPTokenCommand {
    get
    set
  }
  public var ossSo: BlueIDAccessSDK.BlueOssSoMobile {
    get
    set
  }
  public var ossSid: BlueIDAccessSDK.BlueOssSidMobile {
    get
    set
  }
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public enum OneOf_Payload : Swift.Equatable, Swift.Sendable {
    case command(BlueIDAccessSDK.BlueSPTokenCommand)
    case ossSo(BlueIDAccessSDK.BlueOssSoMobile)
    case ossSid(BlueIDAccessSDK.BlueOssSidMobile)
    public static func == (a: BlueIDAccessSDK.BlueSPToken.OneOf_Payload, b: BlueIDAccessSDK.BlueSPToken.OneOf_Payload) -> Swift.Bool
  }
  public init()
}
public struct BlueSPResult : @unchecked Swift.Sendable {
  public var data: Foundation.Data {
    get
    set
  }
  public var hasData: Swift.Bool {
    get
  }
  public mutating func clearData()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssAccessResult : Swift.Sendable {
  public var accessGranted: Swift.Bool {
    get
    set
  }
  public var hasAccessGranted: Swift.Bool {
    get
  }
  public mutating func clearAccessGranted()
  public var accessType: BlueIDAccessSDK.BlueAccessType {
    get
    set
  }
  public var hasAccessType: Swift.Bool {
    get
  }
  public mutating func clearAccessType()
  public var accessInfo: Swift.UInt32 {
    get
    set
  }
  public var hasAccessInfo: Swift.Bool {
    get
  }
  public mutating func clearAccessInfo()
  public var scheduleEndTime: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasScheduleEndTime: Swift.Bool {
    get
  }
  public mutating func clearScheduleEndTime()
  public var scheduleMissmatch: Swift.Bool {
    get
    set
  }
  public var hasScheduleMissmatch: Swift.Bool {
    get
  }
  public mutating func clearScheduleMissmatch()
  public var accessOpenTime: Swift.UInt32 {
    get
    set
  }
  public var hasAccessOpenTime: Swift.Bool {
    get
  }
  public mutating func clearAccessOpenTime()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssAccessEventsResult : Swift.Sendable {
  public var accessResult: BlueIDAccessSDK.BlueOssAccessResult {
    get
    set
  }
  public var hasAccessResult: Swift.Bool {
    get
  }
  public mutating func clearAccessResult()
  public var events: [BlueIDAccessSDK.BlueEvent]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidVersion : Swift.Sendable {
  public var versionMajor: Swift.UInt32 {
    get
    set
  }
  public var hasVersionMajor: Swift.Bool {
    get
  }
  public mutating func clearVersionMajor()
  public var versionMinor: Swift.UInt32 {
    get
    set
  }
  public var hasVersionMinor: Swift.Bool {
    get
  }
  public mutating func clearVersionMinor()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidCredentialTypeOss : Swift.Sendable {
  public var notUsed: Swift.Bool {
    get
    set
  }
  public var hasNotUsed: Swift.Bool {
    get
  }
  public mutating func clearNotUsed()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidCredentialTypeProprietary : @unchecked Swift.Sendable {
  public var mfgCode: Foundation.Data {
    get
    set
  }
  public var hasMfgCode: Swift.Bool {
    get
  }
  public mutating func clearMfgCode()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidCredentialType : Swift.Sendable {
  public var typeSource: BlueIDAccessSDK.BlueOssCredentialTypeSource {
    get
    set
  }
  public var hasTypeSource: Swift.Bool {
    get
  }
  public mutating func clearTypeSource()
  public var oss: BlueIDAccessSDK.BlueOssSidCredentialTypeOss {
    get
    set
  }
  public var hasOss: Swift.Bool {
    get
  }
  public mutating func clearOss()
  public var proprietary: BlueIDAccessSDK.BlueOssSidCredentialTypeProprietary {
    get
    set
  }
  public var hasProprietary: Swift.Bool {
    get
  }
  public mutating func clearProprietary()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidFileInfo : Swift.Sendable {
  public var versionMajor: Swift.UInt32 {
    get
    set
  }
  public var hasVersionMajor: Swift.Bool {
    get
  }
  public mutating func clearVersionMajor()
  public var versionMinor: Swift.UInt32 {
    get
    set
  }
  public var hasVersionMinor: Swift.Bool {
    get
  }
  public mutating func clearVersionMinor()
  public var credentialType: BlueIDAccessSDK.BlueOssSidCredentialType {
    get
    set
  }
  public var hasCredentialType: Swift.Bool {
    get
  }
  public mutating func clearCredentialType()
  public var credentialID: BlueIDAccessSDK.BlueCredentialId {
    get
    set
  }
  public var hasCredentialID: Swift.Bool {
    get
  }
  public mutating func clearCredentialID()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidConfiguration : Swift.Sendable {
  public var info: BlueIDAccessSDK.BlueOssSidFileInfo {
    get
    set
  }
  public var hasInfo: Swift.Bool {
    get
  }
  public mutating func clearInfo()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidStorageProfile : Swift.Sendable {
  public var dataLength: Swift.UInt32 {
    get
    set
  }
  public var hasDataLength: Swift.Bool {
    get
  }
  public mutating func clearDataLength()
  public var fileSize: Swift.UInt32 {
    get
    set
  }
  public var hasFileSize: Swift.Bool {
    get
  }
  public mutating func clearFileSize()
  public var infoDataLength: Swift.UInt32 {
    get
    set
  }
  public var hasInfoDataLength: Swift.Bool {
    get
  }
  public mutating func clearInfoDataLength()
  public var infoFileSize: Swift.UInt32 {
    get
    set
  }
  public var hasInfoFileSize: Swift.Bool {
    get
  }
  public mutating func clearInfoFileSize()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidProvisioningConfiguration : Swift.Sendable {
  public var notUsed: Swift.Bool {
    get
    set
  }
  public var hasNotUsed: Swift.Bool {
    get
  }
  public mutating func clearNotUsed()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidProvisioningData : Swift.Sendable {
  public var configuration: BlueIDAccessSDK.BlueOssSidProvisioningConfiguration {
    get
    set
  }
  public var hasConfiguration: Swift.Bool {
    get
  }
  public mutating func clearConfiguration()
  public var credentialType: BlueIDAccessSDK.BlueOssSidCredentialType {
    get
    set
  }
  public var hasCredentialType: Swift.Bool {
    get
  }
  public mutating func clearCredentialType()
  public var credentialID: BlueIDAccessSDK.BlueCredentialId {
    get
    set
  }
  public var hasCredentialID: Swift.Bool {
    get
  }
  public mutating func clearCredentialID()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidMobile : @unchecked Swift.Sendable {
  public var infoFile: Foundation.Data {
    get
    set
  }
  public var hasInfoFile: Swift.Bool {
    get
  }
  public mutating func clearInfoFile()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidMobileProvisioningConfiguration : Swift.Sendable {
  public var notUsed: Swift.Bool {
    get
    set
  }
  public var hasNotUsed: Swift.Bool {
    get
  }
  public mutating func clearNotUsed()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidMifareDesfireProvisioningConfiguration : Swift.Sendable {
  public var notUsed: Swift.Bool {
    get
    set
  }
  public var hasNotUsed: Swift.Bool {
    get
  }
  public mutating func clearNotUsed()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidMifareDesfireConfiguration : @unchecked Swift.Sendable {
  public var piccMasterKey: Foundation.Data {
    get
    set
  }
  public var hasPiccMasterKey: Swift.Bool {
    get
  }
  public mutating func clearPiccMasterKey()
  public var appMasterKey: Foundation.Data {
    get
    set
  }
  public var hasAppMasterKey: Swift.Bool {
    get
  }
  public mutating func clearAppMasterKey()
  public var projectKey: Foundation.Data {
    get
    set
  }
  public var hasProjectKey: Swift.Bool {
    get
  }
  public mutating func clearProjectKey()
  public var aid: Swift.UInt32 {
    get
    set
  }
  public var hasAid: Swift.Bool {
    get
  }
  public mutating func clearAid()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSidSettings : Swift.Sendable {
  public var mifareDesfireConfig: BlueIDAccessSDK.BlueOssSidMifareDesfireConfiguration {
    get
    set
  }
  public var hasMifareDesfireConfig: Swift.Bool {
    get
  }
  public mutating func clearMifareDesfireConfig()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoVersion : Swift.Sendable {
  public var versionMajor: Swift.UInt32 {
    get
    set
  }
  public var hasVersionMajor: Swift.Bool {
    get
  }
  public mutating func clearVersionMajor()
  public var versionMinor: Swift.UInt32 {
    get
    set
  }
  public var hasVersionMinor: Swift.Bool {
    get
  }
  public mutating func clearVersionMinor()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoCredentialTypeOss : Swift.Sendable {
  public var credential: BlueIDAccessSDK.BlueOssSoCredentialTypeOssCredential {
    get
    set
  }
  public var hasCredential: Swift.Bool {
    get
  }
  public mutating func clearCredential()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoCredentialTypeProprietary : @unchecked Swift.Sendable {
  public var mfgCode: Foundation.Data {
    get
    set
  }
  public var hasMfgCode: Swift.Bool {
    get
  }
  public mutating func clearMfgCode()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoCredentialType : Swift.Sendable {
  public var typeSource: BlueIDAccessSDK.BlueOssCredentialTypeSource {
    get
    set
  }
  public var hasTypeSource: Swift.Bool {
    get
  }
  public mutating func clearTypeSource()
  public var oss: BlueIDAccessSDK.BlueOssSoCredentialTypeOss {
    get
    set
  }
  public var hasOss: Swift.Bool {
    get
  }
  public mutating func clearOss()
  public var proprietary: BlueIDAccessSDK.BlueOssSoCredentialTypeProprietary {
    get
    set
  }
  public var hasProprietary: Swift.Bool {
    get
  }
  public mutating func clearProprietary()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoDTScheduleDay : Swift.Sendable {
  public var weekdays: [Swift.Bool]
  public var timePeriods: [BlueIDAccessSDK.BlueLocalTimeperiod]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoDTSchedule : Swift.Sendable {
  public var days: [BlueIDAccessSDK.BlueOssSoDTScheduleDay]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoDoorInfo : Swift.Sendable {
  public var id: Swift.UInt32 {
    get
    set
  }
  public var hasID: Swift.Bool {
    get
  }
  public mutating func clearID()
  public var accessBy: BlueIDAccessSDK.BlueOssSoDoorInfoAccessBy {
    get
    set
  }
  public var hasAccessBy: Swift.Bool {
    get
  }
  public mutating func clearAccessBy()
  public var dtScheduleNumber: Swift.UInt32 {
    get
    set
  }
  public var hasDtScheduleNumber: Swift.Bool {
    get
  }
  public mutating func clearDtScheduleNumber()
  public var accessType: BlueIDAccessSDK.BlueAccessType {
    get
    set
  }
  public var hasAccessType: Swift.Bool {
    get
  }
  public mutating func clearAccessType()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoEvent : Swift.Sendable {
  public var eventTime: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasEventTime: Swift.Bool {
    get
  }
  public mutating func clearEventTime()
  public var doorID: Swift.UInt32 {
    get
    set
  }
  public var hasDoorID: Swift.Bool {
    get
  }
  public mutating func clearDoorID()
  public var eventID: BlueIDAccessSDK.BlueEventId {
    get
    set
  }
  public var hasEventID: Swift.Bool {
    get
  }
  public mutating func clearEventID()
  public var eventInfo: Swift.UInt32 {
    get
    set
  }
  public var hasEventInfo: Swift.Bool {
    get
  }
  public mutating func clearEventInfo()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoExtFeature : @unchecked Swift.Sendable {
  public var tag: Swift.UInt32 {
    get
    set
  }
  public var hasTag: Swift.Bool {
    get
  }
  public mutating func clearTag()
  public var value: Foundation.Data {
    get
    set
  }
  public var hasValue: Swift.Bool {
    get
  }
  public mutating func clearValue()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoExtFeature_ValidityStart : Swift.Sendable {
  public var isValid: Swift.Bool {
    get
    set
  }
  public var hasIsValid: Swift.Bool {
    get
  }
  public mutating func clearIsValid()
  public var validityStartTime: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasValidityStartTime: Swift.Bool {
    get
  }
  public mutating func clearValidityStartTime()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoFileInfo : Swift.Sendable {
  public var versionMajor: Swift.UInt32 {
    get
    set
  }
  public var hasVersionMajor: Swift.Bool {
    get
  }
  public mutating func clearVersionMajor()
  public var versionMinor: Swift.UInt32 {
    get
    set
  }
  public var hasVersionMinor: Swift.Bool {
    get
  }
  public mutating func clearVersionMinor()
  public var credentialType: BlueIDAccessSDK.BlueOssSoCredentialType {
    get
    set
  }
  public var hasCredentialType: Swift.Bool {
    get
  }
  public mutating func clearCredentialType()
  public var credentialID: BlueIDAccessSDK.BlueCredentialId {
    get
    set
  }
  public var hasCredentialID: Swift.Bool {
    get
  }
  public mutating func clearCredentialID()
  public var maxEventEntries: Swift.UInt32 {
    get
    set
  }
  public var hasMaxEventEntries: Swift.Bool {
    get
  }
  public mutating func clearMaxEventEntries()
  public var maxBlacklistEntries: Swift.UInt32 {
    get
    set
  }
  public var hasMaxBlacklistEntries: Swift.Bool {
    get
  }
  public mutating func clearMaxBlacklistEntries()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoFileData : Swift.Sendable {
  public var validity: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasValidity: Swift.Bool {
    get
  }
  public mutating func clearValidity()
  public var siteID: Swift.UInt32 {
    get
    set
  }
  public var hasSiteID: Swift.Bool {
    get
  }
  public mutating func clearSiteID()
  public var numberOfDayIdsPerDtschedule: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfDayIdsPerDtschedule: Swift.Bool {
    get
  }
  public mutating func clearNumberOfDayIdsPerDtschedule()
  public var numberOfTimePeriodsPerDayID: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfTimePeriodsPerDayID: Swift.Bool {
    get
  }
  public mutating func clearNumberOfTimePeriodsPerDayID()
  public var hasExtensions_p: Swift.Bool {
    get
    set
  }
  public var hasHasExtensions_p: Swift.Bool {
    get
  }
  public mutating func clearHasExtensions_p()
  public var doorInfoEntries: [BlueIDAccessSDK.BlueOssSoDoorInfo]
  public var dtSchedules: [BlueIDAccessSDK.BlueOssSoDTSchedule]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoFileEvent : @unchecked Swift.Sendable {
  public var supportedEventIds: Foundation.Data {
    get
    set
  }
  public var hasSupportedEventIds: Swift.Bool {
    get
  }
  public mutating func clearSupportedEventIds()
  public var events: [BlueIDAccessSDK.BlueOssSoEvent]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoFileBlacklist : Swift.Sendable {
  public var entries: [BlueIDAccessSDK.BlueBlacklistEntry]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoFileCustomerExtensions : Swift.Sendable {
  public var extFeatures: [BlueIDAccessSDK.BlueOssSoExtFeature]
  public var validityStart: BlueIDAccessSDK.BlueOssSoExtFeature_ValidityStart {
    get
    set
  }
  public var hasValidityStart: Swift.Bool {
    get
  }
  public mutating func clearValidityStart()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoConfiguration : @unchecked Swift.Sendable {
  public var info: BlueIDAccessSDK.BlueOssSoFileInfo {
    get
    set
  }
  public var hasInfo: Swift.Bool {
    get
  }
  public mutating func clearInfo()
  public var data: BlueIDAccessSDK.BlueOssSoFileData {
    get
    set
  }
  public var hasData: Swift.Bool {
    get
  }
  public mutating func clearData()
  public var event: BlueIDAccessSDK.BlueOssSoFileEvent {
    get
    set
  }
  public var hasEvent: Swift.Bool {
    get
  }
  public mutating func clearEvent()
  public var blacklist: BlueIDAccessSDK.BlueOssSoFileBlacklist {
    get
    set
  }
  public var hasBlacklist: Swift.Bool {
    get
  }
  public mutating func clearBlacklist()
  public var customerExtensions: BlueIDAccessSDK.BlueOssSoFileCustomerExtensions {
    get
    set
  }
  public var hasCustomerExtensions: Swift.Bool {
    get
  }
  public mutating func clearCustomerExtensions()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoStorageProfile : Swift.Sendable {
  public var dataLength: Swift.UInt32 {
    get
    set
  }
  public var hasDataLength: Swift.Bool {
    get
  }
  public mutating func clearDataLength()
  public var fileSize: Swift.UInt32 {
    get
    set
  }
  public var hasFileSize: Swift.Bool {
    get
  }
  public mutating func clearFileSize()
  public var infoDataLength: Swift.UInt32 {
    get
    set
  }
  public var hasInfoDataLength: Swift.Bool {
    get
  }
  public mutating func clearInfoDataLength()
  public var infoFileSize: Swift.UInt32 {
    get
    set
  }
  public var hasInfoFileSize: Swift.Bool {
    get
  }
  public mutating func clearInfoFileSize()
  public var dataDataLength: Swift.UInt32 {
    get
    set
  }
  public var hasDataDataLength: Swift.Bool {
    get
  }
  public mutating func clearDataDataLength()
  public var dataFileSize: Swift.UInt32 {
    get
    set
  }
  public var hasDataFileSize: Swift.Bool {
    get
  }
  public mutating func clearDataFileSize()
  public var eventDataLength: Swift.UInt32 {
    get
    set
  }
  public var hasEventDataLength: Swift.Bool {
    get
  }
  public mutating func clearEventDataLength()
  public var eventFileSize: Swift.UInt32 {
    get
    set
  }
  public var hasEventFileSize: Swift.Bool {
    get
  }
  public mutating func clearEventFileSize()
  public var blacklistDataLength: Swift.UInt32 {
    get
    set
  }
  public var hasBlacklistDataLength: Swift.Bool {
    get
  }
  public mutating func clearBlacklistDataLength()
  public var blacklistFileSize: Swift.UInt32 {
    get
    set
  }
  public var hasBlacklistFileSize: Swift.Bool {
    get
  }
  public mutating func clearBlacklistFileSize()
  public var customerExtensionsDataLength: Swift.UInt32 {
    get
    set
  }
  public var hasCustomerExtensionsDataLength: Swift.Bool {
    get
  }
  public mutating func clearCustomerExtensionsDataLength()
  public var customerExtensionsFileSize: Swift.UInt32 {
    get
    set
  }
  public var hasCustomerExtensionsFileSize: Swift.Bool {
    get
  }
  public mutating func clearCustomerExtensionsFileSize()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoProvisioningConfiguration : @unchecked Swift.Sendable {
  public var numberOfDoors: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfDoors: Swift.Bool {
    get
  }
  public mutating func clearNumberOfDoors()
  public var numberOfDtschedules: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfDtschedules: Swift.Bool {
    get
  }
  public mutating func clearNumberOfDtschedules()
  public var numberOfDayIdsPerDtschedule: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfDayIdsPerDtschedule: Swift.Bool {
    get
  }
  public mutating func clearNumberOfDayIdsPerDtschedule()
  public var numberOfTimePeriodsPerDayID: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfTimePeriodsPerDayID: Swift.Bool {
    get
  }
  public mutating func clearNumberOfTimePeriodsPerDayID()
  public var numberOfEvents: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfEvents: Swift.Bool {
    get
  }
  public mutating func clearNumberOfEvents()
  public var supportedEventIds: Foundation.Data {
    get
    set
  }
  public var hasSupportedEventIds: Swift.Bool {
    get
  }
  public mutating func clearSupportedEventIds()
  public var numberOfBlacklistEntries: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfBlacklistEntries: Swift.Bool {
    get
  }
  public mutating func clearNumberOfBlacklistEntries()
  public var customerExtensionsSize: Swift.UInt32 {
    get
    set
  }
  public var hasCustomerExtensionsSize: Swift.Bool {
    get
  }
  public mutating func clearCustomerExtensionsSize()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoProvisioningData : Swift.Sendable {
  public var configuration: BlueIDAccessSDK.BlueOssSoProvisioningConfiguration {
    get
    set
  }
  public var hasConfiguration: Swift.Bool {
    get
  }
  public mutating func clearConfiguration()
  public var credentialType: BlueIDAccessSDK.BlueOssSoCredentialType {
    get
    set
  }
  public var hasCredentialType: Swift.Bool {
    get
  }
  public mutating func clearCredentialType()
  public var credentialID: BlueIDAccessSDK.BlueCredentialId {
    get
    set
  }
  public var hasCredentialID: Swift.Bool {
    get
  }
  public mutating func clearCredentialID()
  public var siteID: Swift.UInt32 {
    get
    set
  }
  public var hasSiteID: Swift.Bool {
    get
  }
  public mutating func clearSiteID()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoMobile : @unchecked Swift.Sendable {
  public var infoFile: Foundation.Data {
    get
    set
  }
  public var hasInfoFile: Swift.Bool {
    get
  }
  public mutating func clearInfoFile()
  public var dataFile: Foundation.Data {
    get
    set
  }
  public var hasDataFile: Swift.Bool {
    get
  }
  public mutating func clearDataFile()
  public var blacklistFile: Foundation.Data {
    get
    set
  }
  public var hasBlacklistFile: Swift.Bool {
    get
  }
  public mutating func clearBlacklistFile()
  public var customerExtensionsFile: Foundation.Data {
    get
    set
  }
  public var hasCustomerExtensionsFile: Swift.Bool {
    get
  }
  public mutating func clearCustomerExtensionsFile()
  public var requestedEventCount: Swift.UInt32 {
    get
    set
  }
  public var hasRequestedEventCount: Swift.Bool {
    get
  }
  public mutating func clearRequestedEventCount()
  public var supportedEventIds: Foundation.Data {
    get
    set
  }
  public var hasSupportedEventIds: Swift.Bool {
    get
  }
  public mutating func clearSupportedEventIds()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoMobileProvisioningConfiguration : @unchecked Swift.Sendable {
  public var numberOfDoors: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfDoors: Swift.Bool {
    get
  }
  public mutating func clearNumberOfDoors()
  public var numberOfDtschedules: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfDtschedules: Swift.Bool {
    get
  }
  public mutating func clearNumberOfDtschedules()
  public var numberOfDayIdsPerDtschedule: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfDayIdsPerDtschedule: Swift.Bool {
    get
  }
  public mutating func clearNumberOfDayIdsPerDtschedule()
  public var numberOfTimePeriodsPerDayID: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfTimePeriodsPerDayID: Swift.Bool {
    get
  }
  public mutating func clearNumberOfTimePeriodsPerDayID()
  public var numberOfEvents: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfEvents: Swift.Bool {
    get
  }
  public mutating func clearNumberOfEvents()
  public var supportedEventIds: Foundation.Data {
    get
    set
  }
  public var hasSupportedEventIds: Swift.Bool {
    get
  }
  public mutating func clearSupportedEventIds()
  public var numberOfBlacklistEntries: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfBlacklistEntries: Swift.Bool {
    get
  }
  public mutating func clearNumberOfBlacklistEntries()
  public var customerExtensionsSize: Swift.UInt32 {
    get
    set
  }
  public var hasCustomerExtensionsSize: Swift.Bool {
    get
  }
  public mutating func clearCustomerExtensionsSize()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoMifareDesfireProvisioningConfiguration : @unchecked Swift.Sendable {
  public var numberOfDoors: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfDoors: Swift.Bool {
    get
  }
  public mutating func clearNumberOfDoors()
  public var numberOfDtschedules: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfDtschedules: Swift.Bool {
    get
  }
  public mutating func clearNumberOfDtschedules()
  public var numberOfDayIdsPerDtschedule: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfDayIdsPerDtschedule: Swift.Bool {
    get
  }
  public mutating func clearNumberOfDayIdsPerDtschedule()
  public var numberOfTimePeriodsPerDayID: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfTimePeriodsPerDayID: Swift.Bool {
    get
  }
  public mutating func clearNumberOfTimePeriodsPerDayID()
  public var numberOfEvents: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfEvents: Swift.Bool {
    get
  }
  public mutating func clearNumberOfEvents()
  public var supportedEventIds: Foundation.Data {
    get
    set
  }
  public var hasSupportedEventIds: Swift.Bool {
    get
  }
  public mutating func clearSupportedEventIds()
  public var numberOfBlacklistEntries: Swift.UInt32 {
    get
    set
  }
  public var hasNumberOfBlacklistEntries: Swift.Bool {
    get
  }
  public mutating func clearNumberOfBlacklistEntries()
  public var customerExtensionsSize: Swift.UInt32 {
    get
    set
  }
  public var hasCustomerExtensionsSize: Swift.Bool {
    get
  }
  public mutating func clearCustomerExtensionsSize()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoMifareDesfireConfiguration : @unchecked Swift.Sendable {
  public var piccMasterKey: Foundation.Data {
    get
    set
  }
  public var hasPiccMasterKey: Swift.Bool {
    get
  }
  public mutating func clearPiccMasterKey()
  public var appMasterKey: Foundation.Data {
    get
    set
  }
  public var hasAppMasterKey: Swift.Bool {
    get
  }
  public mutating func clearAppMasterKey()
  public var projectKey: Foundation.Data {
    get
    set
  }
  public var hasProjectKey: Swift.Bool {
    get
  }
  public mutating func clearProjectKey()
  public var aid: Swift.UInt32 {
    get
    set
  }
  public var hasAid: Swift.Bool {
    get
  }
  public mutating func clearAid()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssSoSettings : Swift.Sendable {
  public var mifareDesfireConfig: BlueIDAccessSDK.BlueOssSoMifareDesfireConfiguration {
    get
    set
  }
  public var hasMifareDesfireConfig: Swift.Bool {
    get
  }
  public mutating func clearMifareDesfireConfig()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct _BlueTestEncodeDecode : Swift.Sendable {
  public var vendor: Swift.String {
    get
    set
  }
  public var hasVendor: Swift.Bool {
    get
  }
  public mutating func clearVendor()
  public var hardwareName: Swift.String {
    get
    set
  }
  public var hasHardwareName: Swift.Bool {
    get
  }
  public mutating func clearHardwareName()
  public var hardwareVersion: Swift.Int32 {
    get
    set
  }
  public var hasHardwareVersion: Swift.Bool {
    get
  }
  public mutating func clearHardwareVersion()
  public var applicationVersion: Swift.Int32 {
    get
    set
  }
  public var hasApplicationVersion: Swift.Bool {
    get
  }
  public mutating func clearApplicationVersion()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
extension BlueIDAccessSDK.BlueReturnCode : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueTimeUnit : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueWeekday : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueCredentialType : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueAccessType : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueTransponderType : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueHardwareType : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueBatteryLevel : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueEventId : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueEventInfoSystem : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueEventInfoAccess : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueOssCredentialTypeSource : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueOssSoCredentialTypeOssCredential : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueOssSoDoorGroupId : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueOssSoDoorInfoAccessBy : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueOssSoFileId : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueOssSoWriteStatus : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueSharedDemoData : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSharedDemoData, rhs: BlueIDAccessSDK.BlueSharedDemoData) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueVersionInfo : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueVersionInfo, rhs: BlueIDAccessSDK.BlueVersionInfo) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueLocalTimestamp : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueLocalTimestamp, rhs: BlueIDAccessSDK.BlueLocalTimestamp) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueLocalTimeperiod : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueLocalTimeperiod, rhs: BlueIDAccessSDK.BlueLocalTimeperiod) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueLocalTimeSchedule : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueLocalTimeSchedule, rhs: BlueIDAccessSDK.BlueLocalTimeSchedule) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueCredentialId : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueCredentialId, rhs: BlueIDAccessSDK.BlueCredentialId) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueBlacklistEntry : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueBlacklistEntry, rhs: BlueIDAccessSDK.BlueBlacklistEntry) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueBleManufacturerInfo : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueBleManufacturerInfo, rhs: BlueIDAccessSDK.BlueBleManufacturerInfo) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueBleAdvertisementInfo : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueBleAdvertisementInfo, rhs: BlueIDAccessSDK.BlueBleAdvertisementInfo) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueEvent : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueEvent, rhs: BlueIDAccessSDK.BlueEvent) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSPHandshake : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSPHandshake, rhs: BlueIDAccessSDK.BlueSPHandshake) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSPHandshakeReply : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSPHandshakeReply, rhs: BlueIDAccessSDK.BlueSPHandshakeReply) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSPTokenCommand : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSPTokenCommand, rhs: BlueIDAccessSDK.BlueSPTokenCommand) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSPToken : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSPToken, rhs: BlueIDAccessSDK.BlueSPToken) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSPResult : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSPResult, rhs: BlueIDAccessSDK.BlueSPResult) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssAccessResult : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssAccessResult, rhs: BlueIDAccessSDK.BlueOssAccessResult) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssAccessEventsResult : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssAccessEventsResult, rhs: BlueIDAccessSDK.BlueOssAccessEventsResult) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidVersion : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidVersion, rhs: BlueIDAccessSDK.BlueOssSidVersion) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidCredentialTypeOss : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidCredentialTypeOss, rhs: BlueIDAccessSDK.BlueOssSidCredentialTypeOss) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidCredentialTypeProprietary : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidCredentialTypeProprietary, rhs: BlueIDAccessSDK.BlueOssSidCredentialTypeProprietary) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidCredentialType : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidCredentialType, rhs: BlueIDAccessSDK.BlueOssSidCredentialType) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidFileInfo : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidFileInfo, rhs: BlueIDAccessSDK.BlueOssSidFileInfo) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidConfiguration : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidConfiguration, rhs: BlueIDAccessSDK.BlueOssSidConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidStorageProfile : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidStorageProfile, rhs: BlueIDAccessSDK.BlueOssSidStorageProfile) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidProvisioningConfiguration : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidProvisioningConfiguration, rhs: BlueIDAccessSDK.BlueOssSidProvisioningConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidProvisioningData : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidProvisioningData, rhs: BlueIDAccessSDK.BlueOssSidProvisioningData) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidMobile : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidMobile, rhs: BlueIDAccessSDK.BlueOssSidMobile) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidMobileProvisioningConfiguration : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidMobileProvisioningConfiguration, rhs: BlueIDAccessSDK.BlueOssSidMobileProvisioningConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidMifareDesfireProvisioningConfiguration : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidMifareDesfireProvisioningConfiguration, rhs: BlueIDAccessSDK.BlueOssSidMifareDesfireProvisioningConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidMifareDesfireConfiguration : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidMifareDesfireConfiguration, rhs: BlueIDAccessSDK.BlueOssSidMifareDesfireConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSidSettings : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSidSettings, rhs: BlueIDAccessSDK.BlueOssSidSettings) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoVersion : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoVersion, rhs: BlueIDAccessSDK.BlueOssSoVersion) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoCredentialTypeOss : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoCredentialTypeOss, rhs: BlueIDAccessSDK.BlueOssSoCredentialTypeOss) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoCredentialTypeProprietary : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoCredentialTypeProprietary, rhs: BlueIDAccessSDK.BlueOssSoCredentialTypeProprietary) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoCredentialType : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoCredentialType, rhs: BlueIDAccessSDK.BlueOssSoCredentialType) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoDTScheduleDay : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoDTScheduleDay, rhs: BlueIDAccessSDK.BlueOssSoDTScheduleDay) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoDTSchedule : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoDTSchedule, rhs: BlueIDAccessSDK.BlueOssSoDTSchedule) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoDoorInfo : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoDoorInfo, rhs: BlueIDAccessSDK.BlueOssSoDoorInfo) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoEvent : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoEvent, rhs: BlueIDAccessSDK.BlueOssSoEvent) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoExtFeature : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoExtFeature, rhs: BlueIDAccessSDK.BlueOssSoExtFeature) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoExtFeature_ValidityStart : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoExtFeature_ValidityStart, rhs: BlueIDAccessSDK.BlueOssSoExtFeature_ValidityStart) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoFileInfo : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoFileInfo, rhs: BlueIDAccessSDK.BlueOssSoFileInfo) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoFileData : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoFileData, rhs: BlueIDAccessSDK.BlueOssSoFileData) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoFileEvent : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoFileEvent, rhs: BlueIDAccessSDK.BlueOssSoFileEvent) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoFileBlacklist : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoFileBlacklist, rhs: BlueIDAccessSDK.BlueOssSoFileBlacklist) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoFileCustomerExtensions : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoFileCustomerExtensions, rhs: BlueIDAccessSDK.BlueOssSoFileCustomerExtensions) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoConfiguration : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoConfiguration, rhs: BlueIDAccessSDK.BlueOssSoConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoStorageProfile : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoStorageProfile, rhs: BlueIDAccessSDK.BlueOssSoStorageProfile) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoProvisioningConfiguration : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoProvisioningConfiguration, rhs: BlueIDAccessSDK.BlueOssSoProvisioningConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoProvisioningData : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoProvisioningData, rhs: BlueIDAccessSDK.BlueOssSoProvisioningData) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoMobile : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoMobile, rhs: BlueIDAccessSDK.BlueOssSoMobile) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoMobileProvisioningConfiguration : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoMobileProvisioningConfiguration, rhs: BlueIDAccessSDK.BlueOssSoMobileProvisioningConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoMifareDesfireProvisioningConfiguration : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoMifareDesfireProvisioningConfiguration, rhs: BlueIDAccessSDK.BlueOssSoMifareDesfireProvisioningConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoMifareDesfireConfiguration : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoMifareDesfireConfiguration, rhs: BlueIDAccessSDK.BlueOssSoMifareDesfireConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssSoSettings : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssSoSettings, rhs: BlueIDAccessSDK.BlueOssSoSettings) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK._BlueTestEncodeDecode : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK._BlueTestEncodeDecode, rhs: BlueIDAccessSDK._BlueTestEncodeDecode) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
public enum BlueDeviceType : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case bluetoothDevice
  case uwbdevice
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueDeviceType]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueDeviceType] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum BlueRefreshOssSoCredentialStatus : Swift.Int, SwiftProtobuf.Enum, Swift.CaseIterable {
  case succeeded
  case failed
  case notNeeded
  case unsupported
  public init()
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [BlueIDAccessSDK.BlueRefreshOssSoCredentialStatus]
  public typealias RawValue = Swift.Int
  public static var allCases: [BlueIDAccessSDK.BlueRefreshOssSoCredentialStatus] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public struct BlueI18n : @unchecked Swift.Sendable {
  public var nfcWaitMessage: Swift.String {
    get
    set
  }
  public var hasNfcWaitMessage: Swift.Bool {
    get
  }
  public mutating func clearNfcWaitMessage()
  public var nfcOssSuccessReadConfigurationMessage: Swift.String {
    get
    set
  }
  public var hasNfcOssSuccessReadConfigurationMessage: Swift.Bool {
    get
  }
  public mutating func clearNfcOssSuccessReadConfigurationMessage()
  public var nfcOssSuccessUpdateConfigurationMessage: Swift.String {
    get
    set
  }
  public var hasNfcOssSuccessUpdateConfigurationMessage: Swift.Bool {
    get
  }
  public mutating func clearNfcOssSuccessUpdateConfigurationMessage()
  public var nfcOssSuccessClearEventsMessage: Swift.String {
    get
    set
  }
  public var hasNfcOssSuccessClearEventsMessage: Swift.Bool {
    get
  }
  public mutating func clearNfcOssSuccessClearEventsMessage()
  public var nfcOssSuccessIsProvisionedMessage: Swift.String {
    get
    set
  }
  public var hasNfcOssSuccessIsProvisionedMessage: Swift.Bool {
    get
  }
  public mutating func clearNfcOssSuccessIsProvisionedMessage()
  public var nfcOssSuccessProvisionMessage: Swift.String {
    get
    set
  }
  public var hasNfcOssSuccessProvisionMessage: Swift.Bool {
    get
  }
  public mutating func clearNfcOssSuccessProvisionMessage()
  public var nfcOssSuccessUnprovisionMessage: Swift.String {
    get
    set
  }
  public var hasNfcOssSuccessUnprovisionMessage: Swift.Bool {
    get
  }
  public mutating func clearNfcOssSuccessUnprovisionMessage()
  public var nfcOssSuccessFormatMessage: Swift.String {
    get
    set
  }
  public var hasNfcOssSuccessFormatMessage: Swift.Bool {
    get
  }
  public mutating func clearNfcOssSuccessFormatMessage()
  public var nfcInitializingWritingProcess: Swift.String {
    get
    set
  }
  public var hasNfcInitializingWritingProcess: Swift.Bool {
    get
  }
  public mutating func clearNfcInitializingWritingProcess()
  public var nfcTransponderConnected: Swift.String {
    get
    set
  }
  public var hasNfcTransponderConnected: Swift.Bool {
    get
  }
  public mutating func clearNfcTransponderConnected()
  public var nfcTransponderDisconnected: Swift.String {
    get
    set
  }
  public var hasNfcTransponderDisconnected: Swift.Bool {
    get
  }
  public mutating func clearNfcTransponderDisconnected()
  public var nfcTransponderSuccessReadMessage: Swift.String {
    get
    set
  }
  public var hasNfcTransponderSuccessReadMessage: Swift.Bool {
    get
  }
  public mutating func clearNfcTransponderSuccessReadMessage()
  public var openViaOssTitle: Swift.String {
    get
    set
  }
  public var hasOpenViaOssTitle: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssTitle()
  public var openViaOssWaitMessage: Swift.String {
    get
    set
  }
  public var hasOpenViaOssWaitMessage: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssWaitMessage()
  public var openViaOssAccessGrantedTitle: Swift.String {
    get
    set
  }
  public var hasOpenViaOssAccessGrantedTitle: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssAccessGrantedTitle()
  public var openViaOssAccessGrantedMessage: Swift.String {
    get
    set
  }
  public var hasOpenViaOssAccessGrantedMessage: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssAccessGrantedMessage()
  public var openViaOssAccessGrantedLockEngagedTitle: Swift.String {
    get
    set
  }
  public var hasOpenViaOssAccessGrantedLockEngagedTitle: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssAccessGrantedLockEngagedTitle()
  public var openViaOssAccessGrantedLockEngagedMessage: Swift.String {
    get
    set
  }
  public var hasOpenViaOssAccessGrantedLockEngagedMessage: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssAccessGrantedLockEngagedMessage()
  public var openViaOssAccessGrantedLockDisengagedTitle: Swift.String {
    get
    set
  }
  public var hasOpenViaOssAccessGrantedLockDisengagedTitle: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssAccessGrantedLockDisengagedTitle()
  public var openViaOssAccessGrantedLockDisengagedMessage: Swift.String {
    get
    set
  }
  public var hasOpenViaOssAccessGrantedLockDisengagedMessage: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssAccessGrantedLockDisengagedMessage()
  public var openViaOssAccessGrantedExtendedTimeMessage: Swift.String {
    get
    set
  }
  public var hasOpenViaOssAccessGrantedExtendedTimeMessage: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssAccessGrantedExtendedTimeMessage()
  public var openViaOssAccessDeniedTitle: Swift.String {
    get
    set
  }
  public var hasOpenViaOssAccessDeniedTitle: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssAccessDeniedTitle()
  public var openViaOssAccessDeniedMessage: Swift.String {
    get
    set
  }
  public var hasOpenViaOssAccessDeniedMessage: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssAccessDeniedMessage()
  public var openViaOssAccessDeniedScheduleMismatchMessage: Swift.String {
    get
    set
  }
  public var hasOpenViaOssAccessDeniedScheduleMismatchMessage: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssAccessDeniedScheduleMismatchMessage()
  public var openViaOssErrorTitle: Swift.String {
    get
    set
  }
  public var hasOpenViaOssErrorTitle: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssErrorTitle()
  public var cmnCancelLabel: Swift.String {
    get
    set
  }
  public var hasCmnCancelLabel: Swift.Bool {
    get
  }
  public mutating func clearCmnCancelLabel()
  public var cmnCloseLabel: Swift.String {
    get
    set
  }
  public var hasCmnCloseLabel: Swift.Bool {
    get
  }
  public mutating func clearCmnCloseLabel()
  public var syncDeviceInProgressTitle: Swift.String {
    get
    set
  }
  public var hasSyncDeviceInProgressTitle: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceInProgressTitle()
  public var syncDeviceFailedTitle: Swift.String {
    get
    set
  }
  public var hasSyncDeviceFailedTitle: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceFailedTitle()
  public var syncDeviceCancellingTitle: Swift.String {
    get
    set
  }
  public var hasSyncDeviceCancellingTitle: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceCancellingTitle()
  public var syncDeviceCompletedTitle: Swift.String {
    get
    set
  }
  public var hasSyncDeviceCompletedTitle: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceCompletedTitle()
  public var syncDeviceGetAuthenticationTokenTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDeviceGetAuthenticationTokenTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceGetAuthenticationTokenTaskLabel()
  public var syncDeviceRetrieveDeviceConfigurationTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDeviceRetrieveDeviceConfigurationTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceRetrieveDeviceConfigurationTaskLabel()
  public var syncDeviceUpdateDeviceConfigurationTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDeviceUpdateDeviceConfigurationTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceUpdateDeviceConfigurationTaskLabel()
  public var syncDeviceUpdateDeviceTimeTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDeviceUpdateDeviceTimeTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceUpdateDeviceTimeTaskLabel()
  public var syncDeviceWaitForDeviceToRestartTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDeviceWaitForDeviceToRestartTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceWaitForDeviceToRestartTaskLabel()
  public var syncDevicePushEventLogsTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDevicePushEventLogsTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDevicePushEventLogsTaskLabel()
  public var syncDevicePushSystemLogsTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDevicePushSystemLogsTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDevicePushSystemLogsTaskLabel()
  public var syncDeviceRetrieveBlacklistEntriesTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDeviceRetrieveBlacklistEntriesTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceRetrieveBlacklistEntriesTaskLabel()
  public var syncDeviceDeployBlacklistEntriesTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDeviceDeployBlacklistEntriesTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceDeployBlacklistEntriesTaskLabel()
  public var syncDeviceRetrieveSystemStatusTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDeviceRetrieveSystemStatusTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceRetrieveSystemStatusTaskLabel()
  public var syncDevicePushSystemStatusTaskLabel: Swift.String {
    get
    set
  }
  public var hasSyncDevicePushSystemStatusTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDevicePushSystemStatusTaskLabel()
  public var syncDeviceCheckLatestFwlabel: Swift.String {
    get
    set
  }
  public var hasSyncDeviceCheckLatestFwlabel: Swift.Bool {
    get
  }
  public mutating func clearSyncDeviceCheckLatestFwlabel()
  public var dfuInProgressTitle: Swift.String {
    get
    set
  }
  public var hasDfuInProgressTitle: Swift.Bool {
    get
  }
  public mutating func clearDfuInProgressTitle()
  public var dfuFailedTitle: Swift.String {
    get
    set
  }
  public var hasDfuFailedTitle: Swift.Bool {
    get
  }
  public mutating func clearDfuFailedTitle()
  public var dfuCancellingTitle: Swift.String {
    get
    set
  }
  public var hasDfuCancellingTitle: Swift.Bool {
    get
  }
  public mutating func clearDfuCancellingTitle()
  public var dfuCompletedTitle: Swift.String {
    get
    set
  }
  public var hasDfuCompletedTitle: Swift.Bool {
    get
  }
  public mutating func clearDfuCompletedTitle()
  public var dfuGetAuthenticationTokenTaskLabel: Swift.String {
    get
    set
  }
  public var hasDfuGetAuthenticationTokenTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearDfuGetAuthenticationTokenTaskLabel()
  public var dfuCheckLatestFwlabel: Swift.String {
    get
    set
  }
  public var hasDfuCheckLatestFwlabel: Swift.Bool {
    get
  }
  public mutating func clearDfuCheckLatestFwlabel()
  public var dfuDownloadLatestFwlabel: Swift.String {
    get
    set
  }
  public var hasDfuDownloadLatestFwlabel: Swift.Bool {
    get
  }
  public mutating func clearDfuDownloadLatestFwlabel()
  public var dfuPrepareUpdateLabel: Swift.String {
    get
    set
  }
  public var hasDfuPrepareUpdateLabel: Swift.Bool {
    get
  }
  public mutating func clearDfuPrepareUpdateLabel()
  public var dfuStartBootloaderLabel: Swift.String {
    get
    set
  }
  public var hasDfuStartBootloaderLabel: Swift.Bool {
    get
  }
  public mutating func clearDfuStartBootloaderLabel()
  public var dfuInitializationLabel: Swift.String {
    get
    set
  }
  public var hasDfuInitializationLabel: Swift.Bool {
    get
  }
  public mutating func clearDfuInitializationLabel()
  public var dfuUpdateFwlabel: Swift.String {
    get
    set
  }
  public var hasDfuUpdateFwlabel: Swift.Bool {
    get
  }
  public mutating func clearDfuUpdateFwlabel()
  public var dfuWaitForDeviceToRestartTaskLabel: Swift.String {
    get
    set
  }
  public var hasDfuWaitForDeviceToRestartTaskLabel: Swift.Bool {
    get
  }
  public mutating func clearDfuWaitForDeviceToRestartTaskLabel()
  public var accessTypeDefaultTime: Swift.String {
    get
    set
  }
  public var hasAccessTypeDefaultTime: Swift.Bool {
    get
  }
  public mutating func clearAccessTypeDefaultTime()
  public var accessTypeExtendedTime: Swift.String {
    get
    set
  }
  public var hasAccessTypeExtendedTime: Swift.Bool {
    get
  }
  public mutating func clearAccessTypeExtendedTime()
  public var accessTypeToggle: Swift.String {
    get
    set
  }
  public var hasAccessTypeToggle: Swift.Bool {
    get
  }
  public mutating func clearAccessTypeToggle()
  public var accessTypeClose: Swift.String {
    get
    set
  }
  public var hasAccessTypeClose: Swift.Bool {
    get
  }
  public mutating func clearAccessTypeClose()
  public var accessTypeCustomTime: Swift.String {
    get
    set
  }
  public var hasAccessTypeCustomTime: Swift.Bool {
    get
  }
  public mutating func clearAccessTypeCustomTime()
  public var openViaOssSoSelectAccessTypeTitle: Swift.String {
    get
    set
  }
  public var hasOpenViaOssSoSelectAccessTypeTitle: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssSoSelectAccessTypeTitle()
  public var openViaOssSoSelectAccessTypeMessage: Swift.String {
    get
    set
  }
  public var hasOpenViaOssSoSelectAccessTypeMessage: Swift.Bool {
    get
  }
  public mutating func clearOpenViaOssSoSelectAccessTypeMessage()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueDeviceDetailsBluetooth : Swift.Sendable {
  public var rssi: Swift.Int32 {
    get
    set
  }
  public var hasRssi: Swift.Bool {
    get
  }
  public mutating func clearRssi()
  public var txPower: Swift.Int32 {
    get
    set
  }
  public var hasTxPower: Swift.Bool {
    get
  }
  public mutating func clearTxPower()
  public var isIbeacon: Swift.Bool {
    get
    set
  }
  public var hasIsIbeacon: Swift.Bool {
    get
  }
  public mutating func clearIsIbeacon()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueDeviceDetailsUWB : Swift.Sendable {
  public var notUsed: Swift.Bool {
    get
    set
  }
  public var hasNotUsed: Swift.Bool {
    get
  }
  public mutating func clearNotUsed()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueDeviceInfo : Swift.Sendable {
  public var deviceType: BlueIDAccessSDK.BlueDeviceType {
    get
    set
  }
  public var hasDeviceType: Swift.Bool {
    get
  }
  public mutating func clearDeviceType()
  public var deviceID: Swift.String {
    get
    set
  }
  public var hasDeviceID: Swift.Bool {
    get
  }
  public mutating func clearDeviceID()
  public var distanceMeters: Swift.Float {
    get
    set
  }
  public var hasDistanceMeters: Swift.Bool {
    get
  }
  public mutating func clearDistanceMeters()
  public var manufacturerInfo: BlueIDAccessSDK.BlueBleManufacturerInfo {
    get
    set
  }
  public var hasManufacturerInfo: Swift.Bool {
    get
  }
  public mutating func clearManufacturerInfo()
  public var details: BlueIDAccessSDK.BlueDeviceInfo.OneOf_Details?
  public var bluetooth: BlueIDAccessSDK.BlueDeviceDetailsBluetooth {
    get
    set
  }
  public var uwb: BlueIDAccessSDK.BlueDeviceDetailsUWB {
    get
    set
  }
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public enum OneOf_Details : Swift.Equatable, Swift.Sendable {
    case bluetooth(BlueIDAccessSDK.BlueDeviceDetailsBluetooth)
    case uwb(BlueIDAccessSDK.BlueDeviceDetailsUWB)
    public static func == (a: BlueIDAccessSDK.BlueDeviceInfo.OneOf_Details, b: BlueIDAccessSDK.BlueDeviceInfo.OneOf_Details) -> Swift.Bool
  }
  public init()
}
public struct BlueIdentity : @unchecked Swift.Sendable {
  public var identityID: Swift.String {
    get
    set
  }
  public var hasIdentityID: Swift.Bool {
    get
  }
  public mutating func clearIdentityID()
  public var role: BlueIDAccessSDK.BlueCredentialType {
    get
    set
  }
  public var hasRole: Swift.Bool {
    get
  }
  public mutating func clearRole()
  public var name: Swift.String {
    get
    set
  }
  public var hasName: Swift.Bool {
    get
  }
  public mutating func clearName()
  public var description_p: Swift.String {
    get
    set
  }
  public var hasDescription_p: Swift.Bool {
    get
  }
  public mutating func clearDescription_p()
  public var receiverName: Swift.String {
    get
    set
  }
  public var hasReceiverName: Swift.Bool {
    get
  }
  public mutating func clearReceiverName()
  public var validFrom: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasValidFrom: Swift.Bool {
    get
  }
  public mutating func clearValidFrom()
  public var validTo: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasValidTo: Swift.Bool {
    get
  }
  public mutating func clearValidTo()
  public var organization: Swift.String {
    get
    set
  }
  public var hasOrganization: Swift.Bool {
    get
  }
  public mutating func clearOrganization()
  public var organizationName: Swift.String {
    get
    set
  }
  public var hasOrganizationName: Swift.Bool {
    get
  }
  public mutating func clearOrganizationName()
  public var siteID: Swift.Int32 {
    get
    set
  }
  public var hasSiteID: Swift.Bool {
    get
  }
  public mutating func clearSiteID()
  public var siteName: Swift.String {
    get
    set
  }
  public var hasSiteName: Swift.Bool {
    get
  }
  public mutating func clearSiteName()
  public var privateKey: Foundation.Data {
    get
    set
  }
  public var hasPrivateKey: Swift.Bool {
    get
  }
  public mutating func clearPrivateKey()
  public var status: Swift.String {
    get
    set
  }
  public var hasStatus: Swift.Bool {
    get
  }
  public mutating func clearStatus()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueIdentitiesList : Swift.Sendable {
  public var identities: [BlueIDAccessSDK.BlueIdentity]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueAccessDevice : Swift.Sendable {
  public var deviceID: Swift.String {
    get
    set
  }
  public var hasDeviceID: Swift.Bool {
    get
  }
  public mutating func clearDeviceID()
  public var objectName: Swift.String {
    get
    set
  }
  public var hasObjectName: Swift.Bool {
    get
  }
  public mutating func clearObjectName()
  public var objectID: Swift.Int32 {
    get
    set
  }
  public var hasObjectID: Swift.Bool {
    get
  }
  public mutating func clearObjectID()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueAccessDeviceList : Swift.Sendable {
  public var devices: [BlueIDAccessSDK.BlueAccessDevice]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueAccessObject : Swift.Sendable {
  public var id: Swift.String {
    get
    set
  }
  public var hasID: Swift.Bool {
    get
  }
  public mutating func clearID()
  public var objectID: Swift.Int32 {
    get
    set
  }
  public var hasObjectID: Swift.Bool {
    get
  }
  public mutating func clearObjectID()
  public var name: Swift.String {
    get
    set
  }
  public var hasName: Swift.Bool {
    get
  }
  public mutating func clearName()
  public var description_p: Swift.String {
    get
    set
  }
  public var hasDescription_p: Swift.Bool {
    get
  }
  public mutating func clearDescription_p()
  public var deviceIds: [Swift.String]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueAccessObjectList : Swift.Sendable {
  public var objects: [BlueIDAccessSDK.BlueAccessObject]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueHardwareInfo : Swift.Sendable {
  public var name: Swift.String {
    get
    set
  }
  public var hasName: Swift.Bool {
    get
  }
  public mutating func clearName()
  public var vendor: Swift.String {
    get
    set
  }
  public var hasVendor: Swift.Bool {
    get
  }
  public mutating func clearVendor()
  public var vendorName: Swift.String {
    get
    set
  }
  public var hasVendorName: Swift.Bool {
    get
  }
  public mutating func clearVendorName()
  public var version: Swift.UInt32 {
    get
    set
  }
  public var hasVersion: Swift.Bool {
    get
  }
  public mutating func clearVersion()
  public var type: BlueIDAccessSDK.BlueHardwareType {
    get
    set
  }
  public var hasType: Swift.Bool {
    get
  }
  public mutating func clearType()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSystemStatusExt : Swift.Sendable {
  public var status: BlueIDAccessSDK.BlueSystemStatus {
    get
    set
  }
  public var hasStatus: Swift.Bool {
    get
  }
  public mutating func clearStatus()
  public var newFirmwareVersionAvailable: Swift.Bool {
    get
    set
  }
  public var hasNewFirmwareVersionAvailable: Swift.Bool {
    get
  }
  public mutating func clearNewFirmwareVersionAvailable()
  public var newTestFirmwareVersionAvailable: Swift.Bool {
    get
    set
  }
  public var hasNewTestFirmwareVersionAvailable: Swift.Bool {
    get
  }
  public mutating func clearNewTestFirmwareVersionAvailable()
  public var newConfigurationAvailable: Swift.Bool {
    get
    set
  }
  public var hasNewConfigurationAvailable: Swift.Bool {
    get
  }
  public mutating func clearNewConfigurationAvailable()
  public var hardwareInfo: BlueIDAccessSDK.BlueHardwareInfo {
    get
    set
  }
  public var hasHardwareInfo: Swift.Bool {
    get
  }
  public mutating func clearHardwareInfo()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueRefreshOssSoIdentity : Swift.Sendable {
  public var identityID: Swift.String {
    get
    set
  }
  public var hasIdentityID: Swift.Bool {
    get
  }
  public mutating func clearIdentityID()
  public var status: BlueIDAccessSDK.BlueRefreshOssSoCredentialStatus {
    get
    set
  }
  public var hasStatus: Swift.Bool {
    get
  }
  public mutating func clearStatus()
  public var configuration: BlueIDAccessSDK.BlueOssSoConfiguration {
    get
    set
  }
  public var hasConfiguration: Swift.Bool {
    get
  }
  public mutating func clearConfiguration()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueRefreshOssSoIdentities : Swift.Sendable {
  public var identities: [BlueIDAccessSDK.BlueRefreshOssSoIdentity]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSynchronizeIdentity : Swift.Sendable {
  public var identityID: Swift.String {
    get
    set
  }
  public var hasIdentityID: Swift.Bool {
    get
  }
  public mutating func clearIdentityID()
  public var returnCode: BlueIDAccessSDK.BlueReturnCode {
    get
    set
  }
  public var hasReturnCode: Swift.Bool {
    get
  }
  public mutating func clearReturnCode()
  public var errorDescription: Swift.String {
    get
    set
  }
  public var hasErrorDescription: Swift.Bool {
    get
  }
  public mutating func clearErrorDescription()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSynchronizeIdentities : Swift.Sendable {
  public var identities: [BlueIDAccessSDK.BlueSynchronizeIdentity]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueLegacyProvisioningRequest : Swift.Sendable {
  public var deviceID: Swift.String {
    get
    set
  }
  public var hasDeviceID: Swift.Bool {
    get
  }
  public mutating func clearDeviceID()
  public var soid: Swift.String {
    get
    set
  }
  public var hasSoid: Swift.Bool {
    get
  }
  public mutating func clearSoid()
  public var vendor: Swift.String {
    get
    set
  }
  public var hasVendor: Swift.Bool {
    get
  }
  public mutating func clearVendor()
  public var hardwareType: BlueIDAccessSDK.BlueHardwareType {
    get
    set
  }
  public var hasHardwareType: Swift.Bool {
    get
  }
  public mutating func clearHardwareType()
  public var hardwareVersion: Swift.UInt32 {
    get
    set
  }
  public var hasHardwareVersion: Swift.Bool {
    get
  }
  public mutating func clearHardwareVersion()
  public var hardwareSerialNumber: Swift.String {
    get
    set
  }
  public var hasHardwareSerialNumber: Swift.Bool {
    get
  }
  public mutating func clearHardwareSerialNumber()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueLegacyProvisioningResponse : Swift.Sendable {
  public var deviceID: Swift.String {
    get
    set
  }
  public var hasDeviceID: Swift.Bool {
    get
  }
  public mutating func clearDeviceID()
  public var objectID: Swift.String {
    get
    set
  }
  public var hasObjectID: Swift.Bool {
    get
  }
  public mutating func clearObjectID()
  public var objectName: Swift.String {
    get
    set
  }
  public var hasObjectName: Swift.Bool {
    get
  }
  public mutating func clearObjectName()
  public var provisioning: BlueIDAccessSDK.BlueSystemProvisioning {
    get
    set
  }
  public var hasProvisioning: Swift.Bool {
    get
  }
  public mutating func clearProvisioning()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueAccessCredential : @unchecked Swift.Sendable {
  public var credentialID: BlueIDAccessSDK.BlueCredentialId {
    get
    set
  }
  public var hasCredentialID: Swift.Bool {
    get
  }
  public mutating func clearCredentialID()
  public var credentialType: BlueIDAccessSDK.BlueCredentialType {
    get
    set
  }
  public var hasCredentialType: Swift.Bool {
    get
  }
  public mutating func clearCredentialType()
  public var name: Swift.String {
    get
    set
  }
  public var hasName: Swift.Bool {
    get
  }
  public mutating func clearName()
  public var description_p: Swift.String {
    get
    set
  }
  public var hasDescription_p: Swift.Bool {
    get
  }
  public mutating func clearDescription_p()
  public var siteID: Swift.Int32 {
    get
    set
  }
  public var hasSiteID: Swift.Bool {
    get
  }
  public mutating func clearSiteID()
  public var siteName: Swift.String {
    get
    set
  }
  public var hasSiteName: Swift.Bool {
    get
  }
  public mutating func clearSiteName()
  public var validFrom: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasValidFrom: Swift.Bool {
    get
  }
  public mutating func clearValidFrom()
  public var validTo: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasValidTo: Swift.Bool {
    get
  }
  public mutating func clearValidTo()
  public var validity: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasValidity: Swift.Bool {
    get
  }
  public mutating func clearValidity()
  public var privateKey: Foundation.Data {
    get
    set
  }
  public var hasPrivateKey: Swift.Bool {
    get
  }
  public mutating func clearPrivateKey()
  public var receiverName: Swift.String {
    get
    set
  }
  public var hasReceiverName: Swift.Bool {
    get
  }
  public mutating func clearReceiverName()
  public var organisation: Swift.String {
    get
    set
  }
  public var hasOrganisation: Swift.Bool {
    get
  }
  public mutating func clearOrganisation()
  public var organisationName: Swift.String {
    get
    set
  }
  public var hasOrganisationName: Swift.Bool {
    get
  }
  public mutating func clearOrganisationName()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueAccessCredentialList : Swift.Sendable {
  public var credentials: [BlueIDAccessSDK.BlueAccessCredential]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueRefreshOssSoCredential : Swift.Sendable {
  public var credentialID: BlueIDAccessSDK.BlueCredentialId {
    get
    set
  }
  public var hasCredentialID: Swift.Bool {
    get
  }
  public mutating func clearCredentialID()
  public var status: BlueIDAccessSDK.BlueRefreshOssSoCredentialStatus {
    get
    set
  }
  public var hasStatus: Swift.Bool {
    get
  }
  public mutating func clearStatus()
  public var configuration: BlueIDAccessSDK.BlueOssSoConfiguration {
    get
    set
  }
  public var hasConfiguration: Swift.Bool {
    get
  }
  public mutating func clearConfiguration()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueRefreshOssSoCredentials : Swift.Sendable {
  public var credentials: [BlueIDAccessSDK.BlueRefreshOssSoCredential]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSynchronizeAccessCredential : Swift.Sendable {
  public var credentialID: BlueIDAccessSDK.BlueCredentialId {
    get
    set
  }
  public var hasCredentialID: Swift.Bool {
    get
  }
  public mutating func clearCredentialID()
  public var returnCode: BlueIDAccessSDK.BlueReturnCode {
    get
    set
  }
  public var hasReturnCode: Swift.Bool {
    get
  }
  public mutating func clearReturnCode()
  public var errorDescription: Swift.String {
    get
    set
  }
  public var hasErrorDescription: Swift.Bool {
    get
  }
  public mutating func clearErrorDescription()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSynchronizeAccessCredentials : Swift.Sendable {
  public var credentials: [BlueIDAccessSDK.BlueSynchronizeAccessCredential]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
extension BlueIDAccessSDK.BlueDeviceType : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueRefreshOssSoCredentialStatus : SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
}
extension BlueIDAccessSDK.BlueI18n : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueI18n, rhs: BlueIDAccessSDK.BlueI18n) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueDeviceDetailsBluetooth : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueDeviceDetailsBluetooth, rhs: BlueIDAccessSDK.BlueDeviceDetailsBluetooth) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueDeviceDetailsUWB : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueDeviceDetailsUWB, rhs: BlueIDAccessSDK.BlueDeviceDetailsUWB) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueDeviceInfo : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueDeviceInfo, rhs: BlueIDAccessSDK.BlueDeviceInfo) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueIdentity : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueIdentity, rhs: BlueIDAccessSDK.BlueIdentity) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueIdentitiesList : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueIdentitiesList, rhs: BlueIDAccessSDK.BlueIdentitiesList) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueAccessDevice : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueAccessDevice, rhs: BlueIDAccessSDK.BlueAccessDevice) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueAccessDeviceList : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueAccessDeviceList, rhs: BlueIDAccessSDK.BlueAccessDeviceList) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueAccessObject : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueAccessObject, rhs: BlueIDAccessSDK.BlueAccessObject) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueAccessObjectList : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueAccessObjectList, rhs: BlueIDAccessSDK.BlueAccessObjectList) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueHardwareInfo : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueHardwareInfo, rhs: BlueIDAccessSDK.BlueHardwareInfo) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemStatusExt : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemStatusExt, rhs: BlueIDAccessSDK.BlueSystemStatusExt) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueRefreshOssSoIdentity : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueRefreshOssSoIdentity, rhs: BlueIDAccessSDK.BlueRefreshOssSoIdentity) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueRefreshOssSoIdentities : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueRefreshOssSoIdentities, rhs: BlueIDAccessSDK.BlueRefreshOssSoIdentities) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSynchronizeIdentity : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSynchronizeIdentity, rhs: BlueIDAccessSDK.BlueSynchronizeIdentity) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSynchronizeIdentities : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSynchronizeIdentities, rhs: BlueIDAccessSDK.BlueSynchronizeIdentities) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueLegacyProvisioningRequest : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueLegacyProvisioningRequest, rhs: BlueIDAccessSDK.BlueLegacyProvisioningRequest) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueLegacyProvisioningResponse : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueLegacyProvisioningResponse, rhs: BlueIDAccessSDK.BlueLegacyProvisioningResponse) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueAccessCredential : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueAccessCredential, rhs: BlueIDAccessSDK.BlueAccessCredential) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueAccessCredentialList : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueAccessCredentialList, rhs: BlueIDAccessSDK.BlueAccessCredentialList) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueRefreshOssSoCredential : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueRefreshOssSoCredential, rhs: BlueIDAccessSDK.BlueRefreshOssSoCredential) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueRefreshOssSoCredentials : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueRefreshOssSoCredentials, rhs: BlueIDAccessSDK.BlueRefreshOssSoCredentials) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSynchronizeAccessCredential : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSynchronizeAccessCredential, rhs: BlueIDAccessSDK.BlueSynchronizeAccessCredential) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSynchronizeAccessCredentials : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSynchronizeAccessCredentials, rhs: BlueIDAccessSDK.BlueSynchronizeAccessCredentials) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessPingDeviceCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, deviceID: Swift.String) async throws -> BlueIDAccessSDK.BlueVersionInfo
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, identifier: Swift.String, isDemo: Swift.Bool = false) async throws -> BlueIDAccessSDK.BlueVersionInfo
  #endif
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessProvisionDeviceCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, deviceID: Swift.String, provisioning: BlueIDAccessSDK.BlueSystemProvisioning) async throws
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, identifier: Swift.String, provisioning: BlueIDAccessSDK.BlueSystemProvisioning, isDemo: Swift.Bool = false) async throws
  #endif
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessGetWritableIdentitiesCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String) async throws -> BlueIDAccessSDK.BlueIdentitiesList
  #endif
  @objc deinit
}
public struct BlueIsNfcActive {
  public func run() -> Swift.String
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessGetIdentitiesCommand : BlueIDAccessSDK.BlueSdkCommand {
  public func run(role: BlueIDAccessSDK.BlueCredentialType? = nil, for deviceID: Swift.String? = nil) throws -> BlueIDAccessSDK.BlueIdentitiesList
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BlueJwt {
  @objc deinit
}
#if compiler(>=5.3) && $AsyncAwait
public func blueShowAccessDeviceModal(_ lockState: BlueIDAccessSDK.BlueLockState? = nil, _ accessTypes: [BlueIDAccessSDK.BlueAccessType] = [], _ task: @escaping (BlueIDAccessSDK.BlueAccessType?) async throws -> BlueIDAccessSDK.BlueOssAccessResult) async throws -> BlueIDAccessSDK.BlueOssAccessResult
#endif
#if compiler(>=5.3) && $AsyncAwait
public func blueShowSynchronizeAccessDeviceModal(_ runner: any BlueIDAccessSDK.BlueTaskRunner) async throws
#endif
#if compiler(>=5.3) && $AsyncAwait
public func blueShowUpdateAccessDeviceFirmwareModal(_ runner: any BlueIDAccessSDK.BlueTaskRunner) async throws
#endif
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueUpdateAccessDeviceFirmwareCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, deviceID: Swift.String, testVersion: Swift.Bool? = false) async throws
  #endif
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessSynchronizeIdentityCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, forceRefresh: Swift.Bool? = nil) async throws
  #endif
  @objc deinit
}
public typealias BluePluginResolve = ([Swift.String : Any]?) -> Swift.Void
public typealias BluePluginReject = ([Swift.String : Any]) -> Swift.Void
public protocol BluePluginDelegate {
  func listenerEvent(eventName: Swift.String, eventData: [Swift.String : Any])
}
public class BluePlugin : BlueIDAccessSDK.BlueEventListener {
  public var delegate: (any BlueIDAccessSDK.BluePluginDelegate)?
  public init(delegate: (any BlueIDAccessSDK.BluePluginDelegate)? = nil)
  @objc deinit
  public func runCommand(command: Swift.String, arg0: Any?, arg1: Any?, arg2: Any?, resolve: @escaping BlueIDAccessSDK.BluePluginResolve, reject: @escaping BlueIDAccessSDK.BluePluginReject)
  public func terminalRun(identityID: Swift.String?, deviceID: Swift.String, timeoutSeconds: Swift.Double, requestValues: [Any], resolve: @escaping BlueIDAccessSDK.BluePluginResolve, reject: @escaping BlueIDAccessSDK.BluePluginReject, isTest: Swift.Bool)
  public func blueEvent(event: BlueIDAccessSDK.BlueEventType, data: Any?)
}
public struct BlueIsBluetoothActiveCommand {
  public func run() -> Swift.Bool
}
public struct BlueStartScanningCommand {
  public func run(maxDeviceAgeSeconds: Swift.Double? = nil) throws
}
public struct BlueStopScanningCommand {
  public func run() throws
}
public struct BlueIsScanningActiveCommand {
  public func run() -> Swift.Bool
}
public struct BlueCheckBluetoothPermissionCommand {
  public func run() -> Swift.String
}
public struct BlueCheckAccessTypeCommand {
  public func run(identityID: Swift.String, deviceID: Swift.String) -> Swift.Int?
}
public struct BlueBaseConfig : Swift.Sendable {
  public var isoCountry: Swift.String {
    get
    set
  }
  public var hasIsoCountry: Swift.Bool {
    get
  }
  public mutating func clearIsoCountry()
  public var isoState: Swift.String {
    get
    set
  }
  public var hasIsoState: Swift.Bool {
    get
  }
  public mutating func clearIsoState()
  public var utcOffsetMinutes: Swift.Int32 {
    get
    set
  }
  public var hasUtcOffsetMinutes: Swift.Bool {
    get
  }
  public mutating func clearUtcOffsetMinutes()
  public var autoCheckSystemStatus: Swift.Bool {
    get
    set
  }
  public var hasAutoCheckSystemStatus: Swift.Bool {
    get
  }
  public mutating func clearAutoCheckSystemStatus()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueBleConfig : Swift.Sendable {
  public var isAdvertising: Swift.Bool {
    get
    set
  }
  public var hasIsAdvertising: Swift.Bool {
    get
  }
  public mutating func clearIsAdvertising()
  public var advertisingSchedules: [BlueIDAccessSDK.BlueLocalTimeSchedule]
  public var maxPowerAdvertisingSchedulesIndices: [Swift.UInt32]
  public var advertisingIntervalMs: Swift.UInt32 {
    get
    set
  }
  public var hasAdvertisingIntervalMs: Swift.Bool {
    get
  }
  public mutating func clearAdvertisingIntervalMs()
  public var maxConnectionTimeoutMs: Swift.UInt32 {
    get
    set
  }
  public var hasMaxConnectionTimeoutMs: Swift.Bool {
    get
  }
  public mutating func clearMaxConnectionTimeoutMs()
  public var txPowerLevel: Swift.UInt32 {
    get
    set
  }
  public var hasTxPowerLevel: Swift.Bool {
    get
  }
  public mutating func clearTxPowerLevel()
  public var advertisedTxPower1Meter: Swift.Int32 {
    get
    set
  }
  public var hasAdvertisedTxPower1Meter: Swift.Bool {
    get
  }
  public mutating func clearAdvertisedTxPower1Meter()
  public var isIbeaconAdvertisement: Swift.Bool {
    get
    set
  }
  public var hasIsIbeaconAdvertisement: Swift.Bool {
    get
  }
  public mutating func clearIsIbeaconAdvertisement()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOnlineConfig : Swift.Sendable {
  public var connectSchedules: [BlueIDAccessSDK.BlueLocalTimeSchedule]
  public var wifiSsid: Swift.String {
    get
    set
  }
  public var hasWifiSsid: Swift.Bool {
    get
  }
  public mutating func clearWifiSsid()
  public var wifiPassword: Swift.String {
    get
    set
  }
  public var hasWifiPassword: Swift.Bool {
    get
  }
  public mutating func clearWifiPassword()
  public var timeoutSec: Swift.UInt32 {
    get
    set
  }
  public var hasTimeoutSec: Swift.Bool {
    get
  }
  public mutating func clearTimeoutSec()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueAccessConfigGroup : Swift.Sendable {
  public var groupID: Swift.UInt32 {
    get
    set
  }
  public var hasGroupID: Swift.Bool {
    get
  }
  public mutating func clearGroupID()
  public var schedules: [BlueIDAccessSDK.BlueLocalTimeSchedule]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueAccessConfig : Swift.Sendable {
  public var id: Swift.UInt32 {
    get
    set
  }
  public var hasID: Swift.Bool {
    get
  }
  public mutating func clearID()
  public var siteID: Swift.UInt32 {
    get
    set
  }
  public var hasSiteID: Swift.Bool {
    get
  }
  public mutating func clearSiteID()
  public var groups: [BlueIDAccessSDK.BlueAccessConfigGroup]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueOssConfig : @unchecked Swift.Sendable {
  public var sidMifareAesKey: Foundation.Data {
    get
    set
  }
  public var hasSidMifareAesKey: Swift.Bool {
    get
  }
  public mutating func clearSidMifareAesKey()
  public var sidMifareAid: Swift.UInt32 {
    get
    set
  }
  public var hasSidMifareAid: Swift.Bool {
    get
  }
  public mutating func clearSidMifareAid()
  public var soUpdater: Swift.Bool {
    get
    set
  }
  public var hasSoUpdater: Swift.Bool {
    get
  }
  public mutating func clearSoUpdater()
  public var soPushEvents: Swift.Bool {
    get
    set
  }
  public var hasSoPushEvents: Swift.Bool {
    get
  }
  public mutating func clearSoPushEvents()
  public var soWritePendingEvents: Swift.Bool {
    get
    set
  }
  public var hasSoWritePendingEvents: Swift.Bool {
    get
  }
  public mutating func clearSoWritePendingEvents()
  public var soUpdateFromBlacklist: Swift.Bool {
    get
    set
  }
  public var hasSoUpdateFromBlacklist: Swift.Bool {
    get
  }
  public mutating func clearSoUpdateFromBlacklist()
  public var soMifareAesKey: Foundation.Data {
    get
    set
  }
  public var hasSoMifareAesKey: Swift.Bool {
    get
  }
  public mutating func clearSoMifareAesKey()
  public var soMifareAid: Swift.UInt32 {
    get
    set
  }
  public var hasSoMifareAid: Swift.Bool {
    get
  }
  public mutating func clearSoMifareAid()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSystemAVRInfo : Swift.Sendable {
  public var vermaj: Swift.UInt32 {
    get
    set
  }
  public var hasVermaj: Swift.Bool {
    get
  }
  public mutating func clearVermaj()
  public var vermin: Swift.UInt32 {
    get
    set
  }
  public var hasVermin: Swift.Bool {
    get
  }
  public mutating func clearVermin()
  public var buildnr: Swift.UInt32 {
    get
    set
  }
  public var hasBuildnr: Swift.Bool {
    get
  }
  public mutating func clearBuildnr()
  public var bytesWritten: Swift.UInt32 {
    get
    set
  }
  public var hasBytesWritten: Swift.Bool {
    get
  }
  public mutating func clearBytesWritten()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSystemConfig : @unchecked Swift.Sendable {
  public var configID: Swift.String {
    get
    set
  }
  public var hasConfigID: Swift.Bool {
    get
  }
  public mutating func clearConfigID()
  public var base: BlueIDAccessSDK.BlueBaseConfig {
    get
    set
  }
  public var hasBase: Swift.Bool {
    get
  }
  public mutating func clearBase()
  public var ble: BlueIDAccessSDK.BlueBleConfig {
    get
    set
  }
  public var hasBle: Swift.Bool {
    get
  }
  public mutating func clearBle()
  public var online: BlueIDAccessSDK.BlueOnlineConfig {
    get
    set
  }
  public var hasOnline: Swift.Bool {
    get
  }
  public mutating func clearOnline()
  public var access: BlueIDAccessSDK.BlueAccessConfig {
    get
    set
  }
  public var hasAccess: Swift.Bool {
    get
  }
  public mutating func clearAccess()
  public var oss: BlueIDAccessSDK.BlueOssConfig {
    get
    set
  }
  public var hasOss: Swift.Bool {
    get
  }
  public mutating func clearOss()
  public var lock: BlueIDAccessSDK.BlueLockConfig {
    get
    set
  }
  public var hasLock: Swift.Bool {
    get
  }
  public mutating func clearLock()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSystemTimeUnix : Swift.Sendable {
  public var epoch: Swift.UInt32 {
    get
    set
  }
  public var hasEpoch: Swift.Bool {
    get
  }
  public mutating func clearEpoch()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSystemUpdate : Swift.Sendable {
  public var config: BlueIDAccessSDK.BlueSystemConfig {
    get
    set
  }
  public var hasConfig: Swift.Bool {
    get
  }
  public mutating func clearConfig()
  public var timeUnix: BlueIDAccessSDK.BlueSystemTimeUnix {
    get
    set
  }
  public var hasTimeUnix: Swift.Bool {
    get
  }
  public mutating func clearTimeUnix()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSystemSettings : Swift.Sendable {
  public var blacklistMaxEntriesCount: Swift.UInt32 {
    get
    set
  }
  public var hasBlacklistMaxEntriesCount: Swift.Bool {
    get
  }
  public mutating func clearBlacklistMaxEntriesCount()
  public var blacklistEntriesCount: Swift.UInt32 {
    get
    set
  }
  public var hasBlacklistEntriesCount: Swift.Bool {
    get
  }
  public mutating func clearBlacklistEntriesCount()
  public var eventLogMaxEntriesCount: Swift.UInt32 {
    get
    set
  }
  public var hasEventLogMaxEntriesCount: Swift.Bool {
    get
  }
  public mutating func clearEventLogMaxEntriesCount()
  public var eventLogEntriesCount: Swift.UInt32 {
    get
    set
  }
  public var hasEventLogEntriesCount: Swift.Bool {
    get
  }
  public mutating func clearEventLogEntriesCount()
  public var eventLogSequenceID: Swift.UInt32 {
    get
    set
  }
  public var hasEventLogSequenceID: Swift.Bool {
    get
  }
  public mutating func clearEventLogSequenceID()
  public var eventLogIndex: Swift.UInt32 {
    get
    set
  }
  public var hasEventLogIndex: Swift.Bool {
    get
  }
  public mutating func clearEventLogIndex()
  public var systemLogMaxEntriesCount: Swift.UInt32 {
    get
    set
  }
  public var hasSystemLogMaxEntriesCount: Swift.Bool {
    get
  }
  public mutating func clearSystemLogMaxEntriesCount()
  public var systemLogEntriesCount: Swift.UInt32 {
    get
    set
  }
  public var hasSystemLogEntriesCount: Swift.Bool {
    get
  }
  public mutating func clearSystemLogEntriesCount()
  public var systemLogSequenceID: Swift.UInt32 {
    get
    set
  }
  public var hasSystemLogSequenceID: Swift.Bool {
    get
  }
  public mutating func clearSystemLogSequenceID()
  public var systemLogIndex: Swift.UInt32 {
    get
    set
  }
  public var hasSystemLogIndex: Swift.Bool {
    get
  }
  public mutating func clearSystemLogIndex()
  public var timeWasSet: Swift.Bool {
    get
    set
  }
  public var hasTimeWasSet: Swift.Bool {
    get
  }
  public mutating func clearTimeWasSet()
  public var isBatteryLow: Swift.Bool {
    get
    set
  }
  public var hasIsBatteryLow: Swift.Bool {
    get
  }
  public mutating func clearIsBatteryLow()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSystemProvisioning : @unchecked Swift.Sendable {
  public var hardwareType: BlueIDAccessSDK.BlueHardwareType {
    get
    set
  }
  public var hasHardwareType: Swift.Bool {
    get
  }
  public mutating func clearHardwareType()
  public var deviceID: Swift.String {
    get
    set
  }
  public var hasDeviceID: Swift.Bool {
    get
  }
  public mutating func clearDeviceID()
  public var serialNumber: Swift.String {
    get
    set
  }
  public var hasSerialNumber: Swift.Bool {
    get
  }
  public mutating func clearSerialNumber()
  public var terminalPrivateKey: Foundation.Data {
    get
    set
  }
  public var hasTerminalPrivateKey: Swift.Bool {
    get
  }
  public mutating func clearTerminalPrivateKey()
  public var signaturePublicKey: Foundation.Data {
    get
    set
  }
  public var hasSignaturePublicKey: Swift.Bool {
    get
  }
  public mutating func clearSignaturePublicKey()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSystemStatus : @unchecked Swift.Sendable {
  public var configID: Swift.String {
    get
    set
  }
  public var hasConfigID: Swift.Bool {
    get
  }
  public mutating func clearConfigID()
  public var deviceID: Swift.String {
    get
    set
  }
  public var hasDeviceID: Swift.Bool {
    get
  }
  public mutating func clearDeviceID()
  public var serialNumber: Swift.String {
    get
    set
  }
  public var hasSerialNumber: Swift.Bool {
    get
  }
  public mutating func clearSerialNumber()
  public var hardwareType: BlueIDAccessSDK.BlueHardwareType {
    get
    set
  }
  public var hasHardwareType: Swift.Bool {
    get
  }
  public mutating func clearHardwareType()
  public var batteryLevel: BlueIDAccessSDK.BlueBatteryLevel {
    get
    set
  }
  public var hasBatteryLevel: Swift.Bool {
    get
  }
  public mutating func clearBatteryLevel()
  public var applicationVersion: Swift.UInt32 {
    get
    set
  }
  public var hasApplicationVersion: Swift.Bool {
    get
  }
  public mutating func clearApplicationVersion()
  public var localTime: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasLocalTime: Swift.Bool {
    get
  }
  public mutating func clearLocalTime()
  public var settings: BlueIDAccessSDK.BlueSystemSettings {
    get
    set
  }
  public var hasSettings: Swift.Bool {
    get
  }
  public mutating func clearSettings()
  public var lock: BlueIDAccessSDK.BlueLockStatus {
    get
    set
  }
  public var hasLock: Swift.Bool {
    get
  }
  public mutating func clearLock()
  public var applicationVersionTest: Swift.UInt32 {
    get
    set
  }
  public var hasApplicationVersionTest: Swift.Bool {
    get
  }
  public mutating func clearApplicationVersionTest()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSystemLogQuery : Swift.Sendable {
  public var maxCount: Swift.UInt32 {
    get
    set
  }
  public var hasMaxCount: Swift.Bool {
    get
  }
  public mutating func clearMaxCount()
  public var start: BlueIDAccessSDK.BlueSystemLogQuery.OneOf_Start?
  public var sequenceID: Swift.UInt32 {
    get
    set
  }
  public var fromHead: Swift.Bool {
    get
    set
  }
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public enum OneOf_Start : Swift.Equatable, Swift.Sendable {
    case sequenceID(Swift.UInt32)
    case fromHead(Swift.Bool)
    public static func == (a: BlueIDAccessSDK.BlueSystemLogQuery.OneOf_Start, b: BlueIDAccessSDK.BlueSystemLogQuery.OneOf_Start) -> Swift.Bool
  }
  public init()
}
public struct BlueSystemLogEntry : Swift.Sendable {
  public var sequenceID: Swift.UInt32 {
    get
    set
  }
  public var hasSequenceID: Swift.Bool {
    get
  }
  public mutating func clearSequenceID()
  public var time: BlueIDAccessSDK.BlueLocalTimestamp {
    get
    set
  }
  public var hasTime: Swift.Bool {
    get
  }
  public mutating func clearTime()
  public var severity: Swift.UInt32 {
    get
    set
  }
  public var hasSeverity: Swift.Bool {
    get
  }
  public mutating func clearSeverity()
  public var line: Swift.UInt32 {
    get
    set
  }
  public var hasLine: Swift.Bool {
    get
  }
  public mutating func clearLine()
  public var file: Swift.String {
    get
    set
  }
  public var hasFile: Swift.Bool {
    get
  }
  public mutating func clearFile()
  public var message: Swift.String {
    get
    set
  }
  public var hasMessage: Swift.Bool {
    get
  }
  public mutating func clearMessage()
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueSystemLogResult : Swift.Sendable {
  public var entries: [BlueIDAccessSDK.BlueSystemLogEntry]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueEventLogQuery : Swift.Sendable {
  public var maxCount: Swift.UInt32 {
    get
    set
  }
  public var hasMaxCount: Swift.Bool {
    get
  }
  public mutating func clearMaxCount()
  public var start: BlueIDAccessSDK.BlueEventLogQuery.OneOf_Start?
  public var sequenceID: Swift.UInt32 {
    get
    set
  }
  public var fromHead: Swift.Bool {
    get
    set
  }
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public enum OneOf_Start : Swift.Equatable, Swift.Sendable {
    case sequenceID(Swift.UInt32)
    case fromHead(Swift.Bool)
    public static func == (a: BlueIDAccessSDK.BlueEventLogQuery.OneOf_Start, b: BlueIDAccessSDK.BlueEventLogQuery.OneOf_Start) -> Swift.Bool
  }
  public init()
}
public struct BlueEventLogResult : Swift.Sendable {
  public var events: [BlueIDAccessSDK.BlueEvent]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
public struct BlueBlacklistEntries : Swift.Sendable {
  public var entries: [BlueIDAccessSDK.BlueBlacklistEntry]
  public var unknownFields: SwiftProtobuf.UnknownStorage
  public init()
}
extension BlueIDAccessSDK.BlueBaseConfig : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueBaseConfig, rhs: BlueIDAccessSDK.BlueBaseConfig) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueBleConfig : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueBleConfig, rhs: BlueIDAccessSDK.BlueBleConfig) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOnlineConfig : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOnlineConfig, rhs: BlueIDAccessSDK.BlueOnlineConfig) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueAccessConfigGroup : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueAccessConfigGroup, rhs: BlueIDAccessSDK.BlueAccessConfigGroup) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueAccessConfig : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueAccessConfig, rhs: BlueIDAccessSDK.BlueAccessConfig) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueOssConfig : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueOssConfig, rhs: BlueIDAccessSDK.BlueOssConfig) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemAVRInfo : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemAVRInfo, rhs: BlueIDAccessSDK.BlueSystemAVRInfo) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemConfig : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemConfig, rhs: BlueIDAccessSDK.BlueSystemConfig) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemTimeUnix : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemTimeUnix, rhs: BlueIDAccessSDK.BlueSystemTimeUnix) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemUpdate : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemUpdate, rhs: BlueIDAccessSDK.BlueSystemUpdate) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemSettings : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemSettings, rhs: BlueIDAccessSDK.BlueSystemSettings) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemProvisioning : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemProvisioning, rhs: BlueIDAccessSDK.BlueSystemProvisioning) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemStatus : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemStatus, rhs: BlueIDAccessSDK.BlueSystemStatus) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemLogQuery : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemLogQuery, rhs: BlueIDAccessSDK.BlueSystemLogQuery) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemLogEntry : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemLogEntry, rhs: BlueIDAccessSDK.BlueSystemLogEntry) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueSystemLogResult : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueSystemLogResult, rhs: BlueIDAccessSDK.BlueSystemLogResult) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueEventLogQuery : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueEventLogQuery, rhs: BlueIDAccessSDK.BlueEventLogQuery) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueEventLogResult : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueEventLogResult, rhs: BlueIDAccessSDK.BlueEventLogResult) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension BlueIDAccessSDK.BlueBlacklistEntries : SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: Swift.String
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap
  public var isInitialized: Swift.Bool {
    get
  }
  public mutating func decodeMessage<D>(decoder: inout D) throws where D : SwiftProtobuf.Decoder
  public func traverse<V>(visitor: inout V) throws where V : SwiftProtobuf.Visitor
  public static func == (lhs: BlueIDAccessSDK.BlueBlacklistEntries, rhs: BlueIDAccessSDK.BlueBlacklistEntries) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
public struct BlueNearByActivate {
  public func run() throws
}
public struct BlueNearByDeactivate {
  public func run() throws
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueClearDataCommand : BlueIDAccessSDK.BlueSdkCommand {
  public func run()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueUnclaimAccessDeviceCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, deviceID: Swift.String) async throws
  #endif
  @objc deinit
}
public func blueEncodeMessage(_ message: (any SwiftProtobuf.Message)!, partial: Swift.Bool = false) throws -> Foundation.Data
public func blueDecodeMessage<MessageType>(_ data: Foundation.Data) throws -> MessageType where MessageType : SwiftProtobuf.Message
public func blueDecodeBase64Message<MessageType>(_ base64Encoded: Swift.String) throws -> MessageType where MessageType : SwiftProtobuf.Message
public struct BlueFetchConfig {
}
public struct BlueFetchResponse<T> where T : Swift.Decodable {
}
@_hasMissingDesignatedInitializers public class BlueFetch {
  #if compiler(>=5.3) && $AsyncAwait
  public static func get<T>(url: Foundation.URL, config: BlueIDAccessSDK.BlueFetchConfig? = nil) async throws -> BlueIDAccessSDK.BlueFetchResponse<T> where T : Swift.Decodable
  #endif
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BlueSdkCommand {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BlueSdkAsyncCommand {
  @objc deinit
}
public struct BlueCommands {
  public let initialize: BlueIDAccessSDK.BlueInitializeCommand
  public let release: BlueIDAccessSDK.BlueReleaseCommand
  public let test: BlueIDAccessSDK.BlueTestCommand
  public let versionInfo: BlueIDAccessSDK.BlueVersionInfoCommand
  public let startScanning: BlueIDAccessSDK.BlueStartScanningCommand
  public let stopScanning: BlueIDAccessSDK.BlueStopScanningCommand
  public let isScanningActive: BlueIDAccessSDK.BlueIsScanningActiveCommand
  public let isBluetoothActive: BlueIDAccessSDK.BlueIsBluetoothActiveCommand
  public let checkBluetoothPermission: BlueIDAccessSDK.BlueCheckBluetoothPermissionCommand
  public let nearByActivate: BlueIDAccessSDK.BlueNearByActivate
  public let nearByDeactivate: BlueIDAccessSDK.BlueNearByDeactivate
  public let isNfcActive: BlueIDAccessSDK.BlueIsNfcActive
  public let readTransponderId: BlueIDAccessSDK.BlueGetTransponderIdCommand
  public let ossSoCreateMobile: BlueIDAccessSDK.BlueOssSoCreateMobileCommand
  public let ossSoFormat: BlueIDAccessSDK.BlueOssSoFormatCommand
  public let ossSoGetStorageProfile: BlueIDAccessSDK.BlueOssSoGetStorageProfileCommand
  public let ossSoCreateStandardProvisioningData: BlueIDAccessSDK.BlueOssSoCreateStandardProvisioningDataCommand
  public let ossSoCreateInterventionProvisioningData: BlueIDAccessSDK.BlueOssSoCreateInterventionProvisioningDataCommand
  public let ossSoIsProvisioned: BlueIDAccessSDK.BlueOssSoIsProvisionedCommand
  public let ossSoProvision: BlueIDAccessSDK.BlueOssSoProvisionCommand
  public let ossSoUnprovision: BlueIDAccessSDK.BlueOssSoUnprovisionCommand
  public let ossSoReadConfiguration: BlueIDAccessSDK.BlueOssSoReadConfigurationCommand
  public let ossSoUpdateConfiguration: BlueIDAccessSDK.BlueOssSoUpdateConfigurationCommand
  public let ossSoGetWriteStatus: BlueIDAccessSDK.BlueOssSoGetWriteStatusCommand
  public let readOssSoCredential: BlueIDAccessSDK.BlueReadOssSoCredentialCommand
  public let writeOssSoCredential: BlueIDAccessSDK.BlueWriteOssSoCredentialCommand
  public let refreshOssSoCredential: BlueIDAccessSDK.BlueRefreshOssSoCredentialCommand
  public let refreshOssSoCredentials: BlueIDAccessSDK.BlueRefreshOssSoCredentialsCommand
  public let formatOssSoCredential: BlueIDAccessSDK.BlueFormatOssSoCredentialCommand
  public let ossSidCreateMobile: BlueIDAccessSDK.BlueOssSidCreateMobileCommand
  public let ossSidFormat: BlueIDAccessSDK.BlueOssSidFormatCommand
  public let ossSidGetStorageProfile: BlueIDAccessSDK.BlueOssSidGetStorageProfileCommand
  public let ossSidCreateProvisioningData: BlueIDAccessSDK.BlueOssSidCreateProvisioningDataCommand
  public let ossSidIsProvisioned: BlueIDAccessSDK.BlueOssSidIsProvisionedCommand
  public let ossSidProvision: BlueIDAccessSDK.BlueOssSidProvisionCommand
  public let ossSidUnprovision: BlueIDAccessSDK.BlueOssSidUnprovisionCommand
  public let ossSidReadConfiguration: BlueIDAccessSDK.BlueOssSidReadConfigurationCommand
  public let checkAccessType: BlueIDAccessSDK.BlueCheckAccessTypeCommand
  public let tryAccessDevice: BlueIDAccessSDK.BlueTryAccessDeviceCommand
  public let addIdentity: BlueIDAccessSDK.BlueAcccessAddIdentityCommand
  public let claimIdentity: BlueIDAccessSDK.BlueAccessClaimIdentityCommand
  public let getIdentities: BlueIDAccessSDK.BlueAccessGetIdentitiesCommand
  public let synchronizeIdentity: BlueIDAccessSDK.BlueAccessSynchronizeIdentityCommand
  public let synchronizeIdentities: BlueIDAccessSDK.BlueAccessSynchronizeIdentitiesCommand
  public let listAccessDevices: BlueIDAccessSDK.BlueAccessListDevicesCommand
  public let synchronizeAccessDevice: BlueIDAccessSDK.BlueAccessSynchronizeDeviceCommand
  public let getAccessObjects: BlueIDAccessSDK.BlueAccessGetObjectsCommand
  public let claimAccessDevice: BlueIDAccessSDK.BlueAccessClaimDeviceCommand
  public let provisionAccessDevice: BlueIDAccessSDK.BlueAccessProvisionDeviceCommand
  public let pingAccessDevice: BlueIDAccessSDK.BlueAccessPingDeviceCommand
  public let unclaimAccessDevice: BlueIDAccessSDK.BlueUnclaimAccessDeviceCommand
  public let getWritableIdentities: BlueIDAccessSDK.BlueAccessGetWritableIdentitiesCommand
  public let clearBlacklist: BlueIDAccessSDK.BlueClearBlacklistCommand
  public let clearEventLog: BlueIDAccessSDK.BlueClearEventLogCommand
  public let clearSystemLog: BlueIDAccessSDK.BlueClearSystemLogCommand
  public let getSystemStatus: BlueIDAccessSDK.BlueGetSystemStatusCommand
  public let createLegacyProvisioning: BlueIDAccessSDK.BlueCreateLegacyProvisioningCommand
  public let openAppSettings: BlueIDAccessSDK.BlueOpenAppSettingsCommand
  public let updateAccessDeviceFirmware: BlueIDAccessSDK.BlueUpdateAccessDeviceFirmwareCommand
  public let UNSAFE_clearData: BlueIDAccessSDK.BlueClearDataCommand
}
public let blueCommands: BlueIDAccessSDK.BlueCommands
@_hasMissingDesignatedInitializers @objc(BlueCommandResult) final public class ObjC_BlueCommandResult : ObjectiveC.NSObject {
  @objc final public let error: (any Swift.Error)?
  @objc final public let data: Swift.AnyObject?
  @objc final public let messageTypeName: Swift.String?
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(BlueCommands) final public class ObjC_BlueCommands : ObjectiveC.NSObject {
  @objc public static func run(_ command: Swift.String, arg0: Swift.AnyObject?, arg1: Swift.AnyObject?, arg2: Swift.AnyObject?, completion: ((BlueIDAccessSDK.ObjC_BlueCommandResult) -> Swift.Void)?)
  @objc public static func run(_ command: Swift.String, arg0: Swift.AnyObject, arg1: Swift.AnyObject, completion: ((BlueIDAccessSDK.ObjC_BlueCommandResult) -> Swift.Void)?)
  @objc public static func run(_ command: Swift.String, arg0: Swift.AnyObject, completion: ((BlueIDAccessSDK.ObjC_BlueCommandResult) -> Swift.Void)?)
  @objc public static func run(_ command: Swift.String, completion: ((BlueIDAccessSDK.ObjC_BlueCommandResult) -> Swift.Void)?)
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class BlueSdk {
  @objc deinit
}
public struct BlueVersion {
  public static let current: Swift.String
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessSynchronizeIdentitiesCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync() async throws -> BlueIDAccessSDK.BlueSynchronizeIdentities
  #endif
  @objc deinit
}
public struct BlueOssSidCreateMobileCommand {
  public func run(_ provisioningData: BlueIDAccessSDK.BlueOssSidProvisioningData) throws -> BlueIDAccessSDK.BlueOssSidMobile
}
public struct BlueOssSidFormatCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSidSettings?, _ factoryReset: Swift.Bool = false) throws
}
public struct BlueOssSidGetStorageProfileCommand {
  public func run(_ transponderType: BlueIDAccessSDK.BlueTransponderType, _ provisioningConfig: BlueIDAccessSDK.BlueOssSidProvisioningConfiguration?) throws -> BlueIDAccessSDK.BlueOssSidStorageProfile
}
public struct BlueOssSidCreateProvisioningDataCommand {
  public func run(_ credentialId: Swift.String, _ configuration: BlueIDAccessSDK.BlueOssSidProvisioningConfiguration? = nil) throws -> BlueIDAccessSDK.BlueOssSidProvisioningData
}
public struct BlueOssSidIsProvisionedCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSidSettings?) throws -> Swift.Bool
}
public struct BlueOssSidProvisionCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSidSettings?, _ provisioningData: BlueIDAccessSDK.BlueOssSidProvisioningData) throws
}
public struct BlueOssSidUnprovisionCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSidSettings?) throws
}
public struct BlueOssSidReadConfigurationCommand {
  public func run(_ settings: BlueIDAccessSDK.BlueOssSidSettings?) throws -> BlueIDAccessSDK.BlueOssSidConfiguration
}
extension BlueIDAccessSDK.BlueLocalTimestamp : Swift.Encodable, Swift.Decodable {
  public static func fromUTCDate(_ date: Foundation.Date) -> BlueIDAccessSDK.BlueLocalTimestamp
  public init(_ year: Swift.Int, _ month: Swift.Int, _ date: Swift.Int = 1, _ hours: Swift.Int = 0, _ minutes: Swift.Int = 0, _ seconds: Swift.Int = 0)
  public init(from decoder: any Swift.Decoder) throws
  public func toUTCDate() -> Foundation.Date?
  public func encode(to encoder: any Swift.Encoder) throws
}
extension BlueIDAccessSDK.BlueAccessObject : Swift.Decodable {
  public init(from decoder: any Swift.Decoder) throws
}
extension BlueIDAccessSDK.BlueIdentity : Swift.Decodable {
  public init(from decoder: any Swift.Decoder) throws
  public func checkValidityStart(_ now: Foundation.Date? = nil) -> Swift.Bool
  public static func fromKeyChainEntry(_ entry: Foundation.Data) throws -> BlueIDAccessSDK.BlueIdentity
}
extension BlueIDAccessSDK.BlueIdentitiesList {
  public init(identities: [BlueIDAccessSDK.BlueIdentity])
}
extension BlueIDAccessSDK.BlueAccessObjectList {
  public init(objects: [BlueIDAccessSDK.BlueAccessObject])
}
extension BlueIDAccessSDK.BlueAccessDeviceList {
  public init(devices: [BlueIDAccessSDK.BlueAccessDevice])
}
extension BlueIDAccessSDK.BlueSynchronizeIdentities {
  public init(identities: [BlueIDAccessSDK.BlueSynchronizeIdentity])
}
extension BlueIDAccessSDK.BlueAccessType : Swift.Identifiable {
  public var id: BlueIDAccessSDK.BlueAccessType {
    get
  }
  public typealias ID = BlueIDAccessSDK.BlueAccessType
}
extension Foundation.Data {
  public func chunks(of size: Swift.Int) -> [Foundation.Data]
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc final public class BlueAppDelegate : ObjectiveC.NSObject {
  public static func didFinishLaunchingWithOptions(launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  @objc public static func didFinishLaunchingWithOptions(_ launchOptions: Foundation.NSDictionary)
  @objc public static func willResignActive()
  @objc public static func didBecomeActive()
  @objc public static func didEnterBackground()
  @objc public static func willTerminate()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessClaimDeviceCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, deviceID: Swift.String, objectID: Swift.String) async throws -> BlueIDAccessSDK.BlueSystemStatus?
  #endif
  @objc deinit
}
public func blueCreateIdentityDemo(id: Swift.String? = nil, validFrom: BlueIDAccessSDK.BlueLocalTimestamp? = nil, role: BlueIDAccessSDK.BlueCredentialType? = nil) -> BlueIDAccessSDK.BlueIdentity
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BlueAccessSynchronizeDeviceCommand : BlueIDAccessSDK.BlueSdkAsyncCommand {
  public enum BlueSynchronizeAccessTaskId {
    case getAuthenticationToken
    case getDeviceConfig
    case updateDeviceConfig
    case updateDeviceTime
    case waitForRestart
    case pushEventLogs
    case pushSystemLogs
    case getBlacklistEntries
    case deployBlacklistEntries
    case getSystemStatus
    case pushSystemStatus
    public static func == (a: BlueIDAccessSDK.BlueAccessSynchronizeDeviceCommand.BlueSynchronizeAccessTaskId, b: BlueIDAccessSDK.BlueAccessSynchronizeDeviceCommand.BlueSynchronizeAccessTaskId) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
  #if compiler(>=5.3) && $AsyncAwait
  public func runAsync(identityID: Swift.String, deviceID: Swift.String, showModal: Swift.Bool? = false, validateSettings: Swift.Bool? = false) async throws -> BlueIDAccessSDK.BlueSystemStatusExt?
  #endif
  @objc deinit
}
public var defaultTimeoutSec: Swift.Double
public func blueTerminalRequest<DataType>(identityID: Swift.String?, action: Swift.String, data: DataType) throws where DataType : SwiftProtobuf.Message
public func blueTerminalRequest(identityID: Swift.String?, action: Swift.String, data: Foundation.Data? = nil) throws
public func blueTerminalRequest<DataType, ResultType>(identityID: Swift.String?, action: Swift.String, data: DataType) throws -> ResultType where DataType : SwiftProtobuf.Message, ResultType : SwiftProtobuf.Message
public func blueTerminalRequest<ResultType>(identityID: Swift.String?, action: Swift.String, data: Foundation.Data? = nil) throws -> ResultType where ResultType : SwiftProtobuf.Message
#if compiler(>=5.3) && $AsyncAwait
public func blueTerminalRunOssSoMobile(identityID: Swift.String, deviceID: Swift.String, accessType: BlueIDAccessSDK.BlueAccessType? = nil) async throws -> BlueIDAccessSDK.BlueOssAccessEventsResult
#endif
public func blueTerminalRun<HandlerResult>(deviceID: Swift.String, timeoutSeconds: Swift.Double = defaultTimeoutSec, handler: @escaping () throws -> HandlerResult, completion: @escaping (Swift.Result<HandlerResult, any Swift.Error>) -> Swift.Void, isTest: Swift.Bool = false)
#if compiler(>=5.3) && $AsyncAwait
@available(macOS 10.15, *)
public func blueTerminalRun<HandlerResult>(deviceID: Swift.String, timeoutSeconds: Swift.Double = defaultTimeoutSec, _ handler: @escaping () throws -> HandlerResult) async throws -> HandlerResult
#endif
#if compiler(>=5.3) && $AsyncAwait
@available(macOS 10.15, *)
public func blueTerminalRun(identityID: Swift.String?, deviceID: Swift.String, timeoutSeconds: Swift.Double = 30.0, action: Swift.String) async throws
#endif
#if compiler(>=5.3) && $AsyncAwait
@available(macOS 10.15, *)
public func blueTerminalRun<ResultType>(identityID: Swift.String?, deviceID: Swift.String, timeoutSeconds: Swift.Double = defaultTimeoutSec, action: Swift.String) async throws -> ResultType where ResultType : SwiftProtobuf.Message
#endif
#if compiler(>=5.3) && $AsyncAwait
@available(macOS 10.15, *)
public func blueTerminalRun<DataType>(identityID: Swift.String?, deviceID: Swift.String, timeoutSeconds: Swift.Double = defaultTimeoutSec, action: Swift.String, data: DataType) async throws where DataType : SwiftProtobuf.Message
#endif
#if compiler(>=5.3) && $AsyncAwait
@available(macOS 10.15, *)
public func blueTerminalRun<DataType, ResultType>(identityID: Swift.String?, deviceID: Swift.String, timeoutSeconds: Swift.Double = defaultTimeoutSec, action: Swift.String, data: DataType) async throws -> ResultType where DataType : SwiftProtobuf.Message, ResultType : SwiftProtobuf.Message
#endif
public struct BlueTerminalRequest {
  public let action: Swift.String
  public let data: Foundation.Data?
  public init(action: Swift.String, data: Foundation.Data? = nil)
}
public struct BlueTerminalResult {
  public let statusCode: BlueIDAccessSDK.BlueReturnCode
  public let data: Foundation.Data?
}
public func blueTerminalRun(identityID: Swift.String?, deviceID: Swift.String, timeoutSeconds: Swift.Double = 30.0, requests: [BlueIDAccessSDK.BlueTerminalRequest], completion: @escaping (Swift.Result<[BlueIDAccessSDK.BlueTerminalResult], any Swift.Error>) -> Swift.Void, isTest: Swift.Bool = false, progress: ((Swift.Double) -> Swift.Void)? = nil)
@_hasMissingDesignatedInitializers @objc(BlueTerminalRequest) final public class ObjC_BlueTerminalRequest : ObjectiveC.NSObject {
  @objc final public let action: Swift.String
  @objc final public let data: Foundation.NSData?
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc(BlueTerminalResult) final public class ObjC_BlueTerminalResult : ObjectiveC.NSObject {
  @objc final public let error: (any Swift.Error)?
  @objc final public let statusCode: Swift.Int
  @objc final public let data: Foundation.NSData?
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(BlueTerminal) final public class ObjC_BlueTerminal : ObjectiveC.NSObject {
  @objc public static func run(_ identityID: Swift.String?, _ deviceID: Swift.String, timeoutSeconds: Swift.Double = 30.0, requests: [BlueIDAccessSDK.ObjC_BlueTerminalRequest], completion: (([BlueIDAccessSDK.ObjC_BlueTerminalResult]) -> Swift.Void)?)
  @objc deinit
}
public struct BlueOssSoGetWriteStatusCommand {
  public func run(identityID: Swift.String) throws -> Swift.Int
}
extension BlueIDAccessSDK.BlueEventType : Swift.Equatable {}
extension BlueIDAccessSDK.BlueEventType : Swift.Hashable {}
extension BlueIDAccessSDK.BlueEventType : Swift.RawRepresentable {}
extension BlueIDAccessSDK.BlueAccessSynchronizeDeviceCommand.BlueSynchronizeAccessTaskId : Swift.Equatable {}
extension BlueIDAccessSDK.BlueAccessSynchronizeDeviceCommand.BlueSynchronizeAccessTaskId : Swift.Hashable {}
